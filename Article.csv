Item Title,abstract,Publication Title,Book Series Title,Journal Volume,Journal Issue,Item DOI,Authors,Publication Year,URL,Content Type
Cooperative hybrid consensus with function optimization for blockchain,"We present an experience report on automating the verification of the software barrier synchronization primitive. The informal specification of the primitive is: when a thread calls the software barrier function, the thread halts until all other threads call their instances of the software barrier function. A successful software barrier call ensures that each thread has finished its portion of work before the threads start exchanging the results of these portions of work. While software barriers are widely used in parallel versions of major numerical algorithms and are indispensable in scientific computing, software barrier algorithms and their implementations scarcely have been verified. We improve the state of the art in proving the correctness of the major software barrier algorithms with off-the-shelf automatic verification systems such as Jahob, VCC, Boogie, Spin and Checkfence. We verify a central barrier, a C implementation of a barrier, a static tree barrier, a combining tree barrier, a dissemination barrier, a tournament barrier, a barrier with its client and a barrier on a weak memory model. In the process, we introduce a novel theorem proving method for proving validity of formulas containing cardinalities of comprehensions and improve the capabilities of one of the verification systems. Based on our experience, we propose new challenges in the verification of software barriers.",Cluster Computing,,26.0,6,10.1007/s10586-022-03746-5,Mohammadreza Ipchi SheshgelaniSaeid PashazadehPedram Salehpoor,2023,http://link.springer.com/article/10.1007/s10586-022-03746-5,Article
Proof of bibliometric indicators: a blockchain based consensus protocol for publications,"Research on P2P data structures has tacitly assumed that peers readily participate in the work, i.e., are cooperative. But such participation is voluntary, and free riding is the dominant strategy. This article describes a protocol that renders free riding unattractive, for one particular P2P data structure. The protocol is based on feedback that adjacent nodes exchange. This induces transitive logical networks of nodes that rule out uncooperative peers. The protocol uses proofs of work to deter free riding. To show that cooperative behavior dominates, we have come up with a cost model that quantifies the overall cost of peers, depending on their degree of cooperativeness and many other parameters. The cost model tells us that we can achieve a good discrimination against peers that are less cooperative, with moderate additional cost for cooperative peers. Extensive experiments confirm the validity of our approach.",Multimedia Tools and Applications,,82.0,12,10.1007/s11042-022-14161-8,Parul KhuranaKiran SharmaKiran Khatter,2023,http://link.springer.com/article/10.1007/s11042-022-14161-8,Article
Compress-store on blockchain: a decentralized data processing and immutable storage for multimedia streaming,"In many real-time applications, the set of tasks in the system, as well as the characteristics of the tasks, change during system execution. Specifically, the system moves from one mode of execution to another as its mission progresses. A mode change is characterized by the deletion of some tasks, addition of new tasks, or changes in the parameters of certain tasks, for example, increasing the sampling rate to obtain a more accurate result. This paper discusses how mode changes can be accommodated within a given framework of priority driven real-time scheduling.",Cluster Computing,,25.0,3,10.1007/s10586-022-03584-5,Suayb S. ArslanTurguy Goker,2022,http://link.springer.com/article/10.1007/s10586-022-03584-5,Article
On modeling blockchain-enabled economic networks as stochastic dynamical systems,"The issues surrounding the question of atomicity, both in the past and nowadays, are briefly reviewed, and a picture of an ACID (atomic, consistent, isolated, durable) transaction as a refinement problem is presented. An example of a simple air traffic control system is introduced, and the discrepancies that can arise when read-only operations examine the state at atomic and finegrained levels are handled by retrenchment. Non-ACID timing aspects of the ATC example are also handled by retrenchment, and the treatment is generalised to yield the Retrenchment Atomicity Pattern. The utility of the pattern is confirmed against a number of different case studies. One is the Mondex Electronic Purse, its protocol treated as a conventional atomic transaction. Another is the recovery protocol of Mondex, viewed as a compensated transaction (leading to the view that compensated transactions in general fit the pattern). A final one comprises various unruly phenomena occurring in the implementations of software transactional memory systems, which can frequently display non-ACID behaviour. In all cases the Atomicity Pattern is seen to perform well.",Applied Network Science,,5.0,1,10.1007/s41109-020-0254-9,Zixuan ZhangMichael ZarghamVictor M. Preciado,2020,http://link.springer.com/article/10.1007/s41109-020-0254-9,Article
"SocialFi transforms social media: an overview of key technologies, challenges, and opportunities of the future generation of social media","This paper describes a security architecture for mobile agent based systems. It defines the notion of a security-enhanced agent and outlines security management components in agent platform bases and considers secure migration of agents from one base to another. The security enhanced agent carries a passport that contains its security credentials and some related security code. Then we describe how authentication, integrity and confidentiality, and access control are achieved using the agent's passport and the security infrastructure in the agent bases. We then discuss the application of the security model in roaming mobile agents and consider the types of access control policies that can be specified using the security enhanced agents and the policy base in the agent platforms. Finally we describe the security infrastructure that implements the proposed security services and outline the development of a secure agent based application using the proposed architecture.",Social Network Analysis and Mining,,13.0,1,10.1007/s13278-023-01050-7,Azadeh Imani RadSaeed Banaeian Far,2023,http://link.springer.com/article/10.1007/s13278-023-01050-7,Article
Systematization of knowledge: privacy methods and zero knowledge proofs in corporate blockchains,This paper discusses the considerations that have played a role in the design of the language POOL2. This language integrates the structuring techniques of object-oriented programming with mechanisms for expressing parallelism. We introduce the basic principles of object-oriented programming and its significance for program development methodologies. Several approaches for integrating objects and parallelism are compared and arguments for the choices made in POOL2 are presented. We also explain why inheritance is not yet included in POOL2. A brief overview of the research in formal aspects of POOL is given. Finally we indicate some directions for future developments.,Journal of Computer Virology and Hacking Techniques,,,,10.1007/s11416-023-00470-5,Anatoly KonkinSergey Zapechnikov,2023,http://link.springer.com/article/10.1007/s11416-023-00470-5,Article
Efficient and non-blocking agreement protocols,"Complex variable-structure systems (CVSSs) are a common type of complex systems that exhibit changes both at structural and behavior levels. Simulations of CVSSs challenge current collaborative execution methods with increasingly big and complex models. The emergence of multi-core paradigm presents an exciting opportunity to address such challenge, so an advanced parallel simulator under multi-core environments is proposed. The simulator: (1) provides thread simulation kernels and five kinds of management services to support dynamic model structure flexibly; (2) can explore both inherent and dynamic parallelism among models based on interaction relations, and employ the multi-thread paradigm to gain good speedup; (3) adopts an efficient dynamic load-balancing method, which can migrate models among cores with very low cost and support dynamic core allocation on demand, to address evident load-imbalance problems brought by variable-structure. The experiments show that structure changes can be supported while up to 23 % performance increase can be gained.",Distributed and Parallel Databases,,38.0,2,10.1007/s10619-019-07267-w,Suyash GuptaMohammad Sadoghi,2020,http://link.springer.com/article/10.1007/s10619-019-07267-w,Article
Proof beyond a context-relevant doubt. A structural analysis of the standard of proof in criminal adjudication,"Data centers are major contributors to the emission of carbon dioxide to the atmosphere, and this contribution is expected to increase in the following years. This has encouraged the development of techniques to reduce the energy consumption and the environmental footprint of data centers. Whereas some of these techniques have succeeded to reduce the energy consumption of the hardware equipment of data centers (including IT, cooling, and power supply systems), we claim that sustainable data centers will be only possible if the problem is faced by means of a holistic approach that includes not only the aforementioned techniques but also intelligent and unifying solutions that enable a synergistic and energy-aware management of data centers. In this paper, we propose a comprehensive strategy to reduce the carbon footprint of data centers that uses the energy as a driver of their management procedures. In addition, we present a holistic management architecture for sustainable data centers that implements the aforementioned strategy, and we propose design guidelines to accomplish each step of the proposed strategy, referring to related achievements and enumerating the main challenges that must be still solved.",Artificial Intelligence and Law,,28.0,1,10.1007/s10506-019-09248-x,Kyriakos N. Kotsoglou,2020,http://link.springer.com/article/10.1007/s10506-019-09248-x,Article
Light-Weight Leases for Storage-Centric Coordination,"The past 10 years has seen an explosion of interest for the area of science and technology labelled “nanotechnology.” Although at an early stage, nanotechnology is providing a space for the creation of new alliances and the forging of new ties in many actor arenas, initiated based on promises and high expectations of the fruits that could be harvested from development and investment into nanotechnology. Those trying to characterise the dynamics of emerging ties and networks within this field are faced with a number of complexities which are characteristic of the nanotechnology umbrella term, which covers many technologies, various mixes of disciplines and actors, and ongoing debates about definitions of fields and terminology.",International Journal of Parallel Programming,,34.0,2,10.1007/s10766-006-0008-z,Gregory ChocklerDahlia Malkhi,2006,http://link.springer.com/article/10.1007/s10766-006-0008-z,Article
A Minimal Graphical User Interface for the Jape Proof Calculator,"The Quantified Constraint Satisfaction Problem (QCSP) extends classical CSP in a way which allows reasoning about uncertainty. In this paper I present novel algorithms for solving QCSP. Firstly I present algorithms to perform constraint propagation on reified disjunction constraints of any length. The algorithms make full use of quantifier information to provide a high level of consistency. Secondly I present a scheme to enforce the non-binary pure value rule. This rule is capable of pruning universal variables. Following this, two problems are modelled in non-binary QCSP: the game of Connect 4, and a variant of job-shop scheduling with uncertainty, in the form of machine faults. The job shop scheduling example incorporates probability bounding of scenarios (such that only fault scenarios above a probability threshold are considered) and optimization of the schedule makespan. These contribute to the art of modelling in QCSP, and are a proof of concept for applying QCSP methods to complex, realistic problems. Both models make use of the reified disjunction constraint, and the non-binary pure value rule. The example problems are used to evaluate the QCSP algorithms presented in this paper, identifying strengths and weaknesses, and to compare them to other QCSP approaches.",Formal Aspects of Computing,,11.0,3,10.1007/s001650050050,Richard BornatBernard Sufrin,1999,http://link.springer.com/article/10.1007/s001650050050,Article
Tardiness bounds under global EDF scheduling on a multiprocessor,"An elementary correctness proof for Ben-Ari's algorithm (1984) for incremental garbage collection is given. We give a new algorithm for systems in which there are multiple mutators and a proof of its correctness, which is a minor modification of the previous proof. Finally, we remark upon a way to implement these algorithms that may increase their performance on certain architectures.",Real-Time Systems,,38.0,2,10.1007/s11241-007-9042-1,UmaMaheswari C. DeviJ. H. Anderson,2008,http://link.springer.com/article/10.1007/s11241-007-9042-1,Article
A Comparison of Mizar and Isar,"We present the design and implementation of a parallel algorithm for computing Gröbner bases on distributed memory multiprocessors. The parallel algorithm is irregular both in space and time: the data structures are dynamic pointer-based structures and the computations on the structures have unpredictable duration. The algorithm is presented as a series of refinements on atransition rule program, in which computation proceeds by nondeterministic invocations of guarded commands. Two key data structures, a set and a priority queue, are distributed across processors in the parallel algorithm. The data structures are designed for high throughput and latency tolerance, as appropriate for distributed memory machines. The programming style represents a compromise between shared-memory and message-passing models. The distributed nature of the data structures shows through their interface in that the semantics are weaker than with shared atomic objects, but they still provide a shared abstraction that can be used for reasoning about program correctness. In the data structure design there is a classic trade-off between locality and load balance. We argue that this is best solved by designing scheduling structures in tandem with the state data structures, since the decision to replicate or partition state affects the overhead of dynamically moving tasks.",Journal of Automated Reasoning,,29.0,4-Mar,10.1023/A:1021935419355,Markus WenzelFreek Wiedijk,2002,http://link.springer.com/article/10.1023/A%3A1021935419355,Article
Cut and side-effects in a data-driven implementation of Prolog,"We study the behavior of Range Voting and Normalized Range Voting with respect to electoral control. Electoral control encompasses attempts from an election chair to alter the participation or structure of an election in order to change the outcome. We show that a voting system resists a case of control by proving that performing that case of control is computationally hard. Range Voting is a natural extension of approval voting, and Normalized Range Voting is a simple variant which alters each vote to maximize the potential impact of each voter. We show that Normalized Range Voting has among the largest known number of control resistances among natural voting systems.",New Generation Computing,,12.0,3,10.1007/BF03037344,Surapong AuwatanamongkolAndrzej CiepielewskiPrasenjit Biswas,1994,http://link.springer.com/article/10.1007/BF03037344,Article
Representing shared data on distributed-memory parallel computers,A priority inversion occurs when a low-priority task causes the execution of a higher-priority task to be delayed. The possibility of priority inversions complicates the analysis of systems that use priority-based schedulers because priority inversions invalidate the assumption that a task can be delayed by only higher-priority tasks. This paper formalizes priority inversion and gives sufficient conditions as well as some new protocols for preventing priority inversions.,Mathematical systems theory,,29.0,2,10.1007/BF01305311,K. T. Herley,1996,http://link.springer.com/article/10.1007/BF01305311,Article
Long-term pattern formation and maintenance for battery-powered robots,"In general computing systems, a job (process/task) may suspend itself whilst it is waiting for some activity to complete, e.g., an accelerator to return data. In real-time systems, such self-suspension can cause substantial performance/schedulability degradation. This observation, first made in 1988, has led to the investigation of the impact of self-suspension on timing predictability, and many relevant results have been published since. Unfortunately, as it has recently come to light, a number of the existing results are flawed. To provide a correct platform on which future research can be built, this paper reviews the state of the art in the design and analysis of scheduling algorithms and schedulability tests for self-suspending tasks in real-time systems. We provide (1) a systematic description of how self-suspending tasks can be handled in both soft and hard real-time systems; (2) an explanation of the existing misconceptions and their potential remedies; (3) an assessment of the influence of such flawed analyses on partitioned multiprocessor fixed-priority scheduling when tasks synchronize access to shared resources; and (4) a discussion of the computational complexity of analyses for different self-suspension task models.",Swarm Intelligence,,13.0,1,10.1007/s11721-019-00162-1,Guannan LiIvan SvogorGiovanni Beltrame,2019,http://link.springer.com/article/10.1007/s11721-019-00162-1,Article
Exploiting fine-grained parallelism in graph traversal algorithms via lock virtualization on multi-core architecture,"We propose a novel distributed algorithm for the minimum cut problem. Motivated by applications like volumetric segmentation in computer vision, we aim at solving large sparse problems. When the problem does not fully fit in the memory, we need to either process it by parts, looking at one part at a time, or distribute across several computers. Many MINCUT/MAXFLOW algorithms are designed for the shared memory architecture and do not scale to this setting. We consider algorithms that work on disjoint regions of the problem and exchange messages between the regions. We show that the region push-relabel algorithm of Delong and Boykov (A scalable graph-cut algorithm for N-D grids, in CVPR, 2008) uses Θ(n 2) rounds of message exchange, where n is the number of vertices. Our new algorithm performs path augmentations inside the regions and push-relabel style updates between the regions. It uses asymptotically less message exchanges, \(O(\mathcal{B}^{2})\), where \(\mathcal{B}\) is the set of boundary vertices. The sequential and parallel versions of our algorithm are competitive with the state-of-the-art in the shared memory model. By achieving a lower amount of message exchanges (even asymptotically lower in our synthetic experiments), they suit better for solving large problems using a disk storage or a distributed system.",The Journal of Supercomputing,,69.0,3,10.1007/s11227-014-1239-1,Jie YanGuangming TanNinghui Sun,2014,http://link.springer.com/article/10.1007/s11227-014-1239-1,Article
Recovery oriented programming: runtime monitoring of safety and liveness,"This paper is concerned with the design of online scheduling algorithms that exploit extra resources. In particular, it studies how to make use of multiple processors to counteract the lack of future information in online deadline scheduling. Our results extend the previous work that are primarily based on using a faster processor to obtain a performance guarantee. The challenge arises from the fact that jobs are sequential in nature and cannot be executed on more than one processor at the same time. Thus, a faster processor can speed up a job while multiple unit-speed processors cannot.",International Journal on Software Tools for Technology Transfer,,13.0,4,10.1007/s10009-011-0200-3,Olga BrukmanShlomi Dolev,2011,http://link.springer.com/article/10.1007/s10009-011-0200-3,Article
I/O scheduling for digital continuous media,"We present a technique for analyzing the number of cache misses incurred by multithreaded cache oblivious algorithms on an idealized parallel machine in which each processor has a private cache. We specialize this technique to computations executed by the Cilk work-stealing scheduler on a machine with dag-consistent shared memory. We show that a multithreaded cache oblivious matrix multiplication incurs \(O(n^{3}/\sqrt{ Z}+(Pn)^{1/3}n^{2})\) cache misses when executed by the Cilk scheduler on a machine with P processors, each with a cache of size Z, with high probability. This bound is tighter than previously published bounds. We also present a new multithreaded cache oblivious algorithm for 1D stencil computations incurring \(O(n^{2}/Z+n+\sqrt{ Pn^{3+\epsilon}})\) cache misses with high probability, one for Gaussian elimination and back substitution, and one for the length computation part of the longest common subsequence problem incurring \(O(n^{2}/Z+\sqrt{ Pn^{3.58}})\) cache misses with high probability.",Multimedia Systems,,5.0,4,10.1007/s005300050057,Deepak R. Kenchammana-HosekoteJaideep Srivastava,1997,http://link.springer.com/article/10.1007/s005300050057,Article
Extracting safe thread schedules from incomplete model checking results,"Parallelizing (compute-intensive) discrete event simulation (DES) applications is a classical approach for speeding up their execution and for making very large/complex simulation models tractable. This has been historically achieved via parallel DES (PDES) techniques, which are based on partitioning the simulation model into distinct simulation objects (somehow resembling objects in classical object-oriented programming), whose states are disjoint, which are executed concurrently and rely on explicit event-exchange (or event-scheduling) primitives as the means to support mutual dependencies and notification of their state updates. With this approach, the application developer is necessarily forced to reason about state separation across the objects, thus being not allowed to rely on shared information, such as global variables, within the application code. This implicitly leads to the shift of the user-exposed programming model to one where sequential-style global variable accesses within the application code are not allowed. In this article we remove this limitation by providing support for managing global variables in the context of DES code developed in ANSI-C, which gets automatically parallelized. Particularly, we focus on speculative (also termed optimistic) PDES systems that run on top of multi-core machines, where simulation objects can concurrently process their events with no guarantee of causal consistency and actual violations of causality rules are recovered through rollback/recovery schemes. In compliance with the nature of speculative processing, in our proposal global variables are transparently mapped to multi-versions, so as to avoid any form of safety predicate verification upon their updates. Consistency is ensured via the introduction of a new rollback/recovery scheme based on detecting global variables’ reads on non-correct versions. At the same time, efficiency in the execution is guaranteed by managing multi-version variables’ lists via non-blocking algorithms. Furthermore, the whole approach is fully transparent, being it based on automatized instrumentation of the application software (particularly ELF objects). Hence the programmer is exposed to the classical (and easy to code) sequential-style programming scheme while accessing any global variable. An experimental assessment of our proposal, based on a suite of case study applications, run on top of an off-the-shelf Linux machine equipped with 32 CPU-cores and 64 GB of RAM, is also presented.",International Journal on Software Tools for Technology Transfer,,22.0,5,10.1007/s10009-020-00575-y,Patrick MetzlerNeeraj SuriGeorg Weissenbacher,2020,http://link.springer.com/article/10.1007/s10009-020-00575-y,Article
Microprocessor design verification,"Model checkers frequently fail to completely verify a concurrent program, even if partial-order reduction is applied. The verification engineer is left in doubt whether the program is safe and the effort toward verifying the program is wasted. We present a technique that uses the results of such incomplete verification attempts to construct a (fair) scheduler that allows the safe execution of the partially verified concurrent program. This scheduler restricts the execution to schedules that have been proven safe (and prevents executions that were found to be erroneous). We evaluate the performance of our technique and show how it can be improved using partial-order reduction. While constraining the scheduler results in a considerable performance penalty in general, we show that in some cases our approach—somewhat surprisingly—even leads to faster executions.",Journal of Automated Reasoning,,5.0,4,10.1007/BF00243132,Warren A. Hunt Jr,1989,http://link.springer.com/article/10.1007/BF00243132,Article
On Automation in the Verification of Software Barriers: Experience Report,,Journal of Automated Reasoning,,52.0,3,10.1007/s10817-013-9290-9,Alexander MalkisAnindya Banerjee,2014,http://link.springer.com/article/10.1007/s10817-013-9290-9,Article
Free riding-aware forwarding in Content-Addressable Networks,,The VLDB Journal,,16.0,4,10.1007/s00778-005-0175-3,Klemens BöhmErik Buchmann,2007,http://link.springer.com/article/10.1007/s00778-005-0175-3,Article
Mode change protocols for priority-driven preemptive scheduling,,Real-Time Systems,,1.0,3,10.1007/BF00365439,Lui ShaRagunathan RajkumarJohn LehoczkyKrithi Ramamritham,1989,http://link.springer.com/article/10.1007/BF00365439,Article
Atomicity failure and the retrenchment atomicity pattern,,Formal Aspects of Computing,,25.0,3,10.1007/s00165-011-0216-1,Richard BanachCzesław JeskeAnthony HallSusan Stepney,2013,http://link.springer.com/article/10.1007/s00165-011-0216-1,Article
A Security Architecture for Mobile Agent Based Applications,,World Wide Web,,6.0,1,10.1023/A:1022360516731,V. VaradharajanD. Foster,2003,http://link.springer.com/article/10.1023/A%3A1022360516731,Article
Issues in the design of a parallel object-oriented language,,Formal Aspects of Computing,,1.0,1,10.1007/BF01887214,Pierre America,1989,http://link.springer.com/article/10.1007/BF01887214,Article
An efficient approach to collaborative simulation of variable structure systems on multi-core machines,,Cluster Computing,,19.0,1,10.1007/s10586-015-0498-9,Chen YangPeng ChiXiao SongTing Yu LinBo Hu LiXudong Chai,2016,http://link.springer.com/article/10.1007/s10586-015-0498-9,Article
Toward sustainable data centers: a comprehensive energy management strategy,,Computing,,99.0,6,10.1007/s00607-016-0501-1,Jordi Guitart,2017,http://link.springer.com/article/10.1007/s00607-016-0501-1,Article
Tracking the evolution of new and emerging S&T via statement-linkages: Vision assessment in molecular machines,,Scientometrics,,70.0,3,10.1007/s11192-007-0314-2,Douglas K. R. RobinsonMartin RuivenkampArie Rip,2007,http://link.springer.com/article/10.1007/s11192-007-0314-2,Article
Non-binary quantified CSP: algorithms and modelling,,Constraints,,14.0,4,10.1007/s10601-009-9068-1,Peter Nightingale,2009,http://link.springer.com/article/10.1007/s10601-009-9068-1,Article
An incremental garbage collection algorithm for multi-mutator systems,,Distributed Computing,,3.0,1,10.1007/BF01788566,Carl Pixley,1988,http://link.springer.com/article/10.1007/BF01788566,Article
Distributed data structures and algorithms for Gröbner basis computation,,LISP and Symbolic Computation,,7.0,3-Feb,10.1007/BF01018692,Soumen ChakrabartiKatherine Yelick,1994,http://link.springer.com/article/10.1007/BF01018692,Article
Normalized Range Voting Broadly Resists Control,,Theory of Computing Systems,,53.0,4,10.1007/s00224-012-9441-0,Curtis Menton,2013,http://link.springer.com/article/10.1007/s00224-012-9441-0,Article
A formalization of priority inversion,,Real-Time Systems,,5.0,4,10.1007/BF01088832,Özalp BabaoğluKeith MarzulloFred B. Schneider,1993,http://link.springer.com/article/10.1007/BF01088832,Article
"Many suspensions, many problems: a review of self-suspending tasks in real-time systems",,Real-Time Systems,,55.0,1,10.1007/s11241-018-9316-9,Jian-Jia ChenGeoffrey NelissenWen-Hung HuangMaolin YangBjörn BrandenburgKonstantinos BletsasCong LiuPascal RichardFrédéric RidouardNeil AudsleyRaj RajkumarDionisio de NizGeorg von der Brüggen,2019,http://link.springer.com/article/10.1007/s11241-018-9316-9,Article
A Distributed Mincut/Maxflow Algorithm Combining Path Augmentation and Push-Relabel,,International Journal of Computer Vision,,104.0,3,10.1007/s11263-012-0571-2,Alexander ShekhovtsovVáclav Hlaváč,2013,http://link.springer.com/article/10.1007/s11263-012-0571-2,Article
Extra Processors versus Future Information in Optimal Deadline Scheduling,,Theory of Computing Systems,,37.0,3,10.1007/s00224-004-1116-z,Chiu-Yuen KooTak-Wah LamTsuen-Wan 'Johnny' NganKar-Keung To,2004,http://link.springer.com/article/10.1007/s00224-004-1116-z,Article
The Cache Complexity of Multithreaded Cache Oblivious Algorithms,,Theory of Computing Systems,,45.0,2,10.1007/s00224-007-9098-2,Matteo FrigoVolker Strumpen,2009,http://link.springer.com/article/10.1007/s00224-007-9098-2,Article
Transparent Speculative Parallelization of Discrete Event Simulation Applications Using Global Variables,,International Journal of Parallel Programming,,44.0,6,10.1007/s10766-016-0429-2,Alessandro PellegriniSebastiano PelusoFrancesco QuagliaRoberto Vitali,2016,http://link.springer.com/article/10.1007/s10766-016-0429-2,Article
Juggle: addressing extrinsic load imbalances in SPMD applications on multicore computers,,Cluster Computing,,16.0,2,10.1007/s10586-012-0204-0,Steven HofmeyrJuan A. ColmenaresCostin IancuJohn Kubiatowicz,2013,http://link.springer.com/article/10.1007/s10586-012-0204-0,Article
Entropies and the Anthropocene crisis,,AI & SOCIETY,,38.0,6,10.1007/s00146-021-01221-0,Maël Montévil,2023,http://link.springer.com/article/10.1007/s00146-021-01221-0,Article
A method for evaluating modern systems of automatic text summarization,,Automatic Documentation and Mathematical Linguistics,,41.0,3,10.3103/S0005105507030041,V. A. YatskoT. N. Vishnyakov,2007,http://link.springer.com/article/10.3103/S0005105507030041,Article
Programming with Divide-and-Conquer Skeletons: A Case Study of FFT,,The Journal of Supercomputing,,12.0,2-Jan,10.1023/A:1007981511582,Sergei Gorlatch,1998,http://link.springer.com/article/10.1023/A%3A1007981511582,Article
A New Efficient Algorithm for Computing the Longest Common Subsequence,,Theory of Computing Systems,,45.0,2,10.1007/s00224-008-9101-6,Costas S. IliopoulosM. Sohel Rahman,2009,http://link.springer.com/article/10.1007/s00224-008-9101-6,Article
GeMDA: A Multidimensional Data Partitioning Technique for Multiprocessor Database Systems,,Distributed and Parallel Databases,,9.0,3,10.1023/A:1019265612794,Yu-Lung LoKien A. HuaHonesty C. Young,2001,http://link.springer.com/article/10.1023/A%3A1019265612794,Article
4D space–time Delaunay meshing for medical images,,Engineering with Computers,,31.0,3,10.1007/s00366-014-0380-z,Panagiotis FoteinosNikos Chrisochoides,2015,http://link.springer.com/article/10.1007/s00366-014-0380-z,Article
Parallelization of deduction strategies: An analytical study,,Journal of Automated Reasoning,,13.0,1,10.1007/BF00881910,Maria Paola BonacinaJieh Hsiang,1994,http://link.springer.com/article/10.1007/BF00881910,Article
Universal approximation of polygonal fuzzy neural networks in sense of K-integral norms,,Science China Information Sciences,,54.0,11,10.1007/s11432-011-4364-y,GuiJun WangXiaoPing Li,2011,http://link.springer.com/article/10.1007/s11432-011-4364-y,Article
Applying the persistent set approach in temporal reasoning,,Annals of Mathematics and Artificial Intelligence,,14.0,1,10.1007/BF01530894,Yan ZhangNorman Y. Foo,1995,http://link.springer.com/article/10.1007/BF01530894,Article
A linear algorithm to find a rectangular dual of a planar triangulated graph,,Algorithmica,,3.0,4-Jan,10.1007/BF01762117,Jayaram BhaskerSartaj Sahni,1988,http://link.springer.com/article/10.1007/BF01762117,Article
An efficient checkpointing method for multicomputers with wormhole routing,,International Journal of Parallel Programming,,20.0,3,10.1007/BF01379316,Kai LiJeffrey F. NaughtonJames S. Plank,1991,http://link.springer.com/article/10.1007/BF01379316,Article
"The Cache-Oblivious Gaussian Elimination Paradigm: Theoretical Framework, Parallelization and Experimental Evaluation",,Theory of Computing Systems,,47.0,4,10.1007/s00224-010-9273-8,Rezaul Alam ChowdhuryVijaya Ramachandran,2010,http://link.springer.com/article/10.1007/s00224-010-9273-8,Article
Z2SAL: a translation-based model checker for Z,,Formal Aspects of Computing,,23.0,1,10.1007/s00165-009-0126-7,John DerrickSiobhán NorthAnthony J. H. Simons,2011,http://link.springer.com/article/10.1007/s00165-009-0126-7,Article
Distributed temporal graph analytics with GRADOOP,,The VLDB Journal,,31.0,2,10.1007/s00778-021-00667-4,Christopher RostKevin GomezMatthias TäschnerPhilip FritzscheLucas SchonsLukas ChristTimo AdameitMartin JunghannsErhard Rahm,2022,http://link.springer.com/article/10.1007/s00778-021-00667-4,Article
"Scalable, parallel computers: Alternatives, issues, and challenges",,International Journal of Parallel Programming,,22.0,1,10.1007/BF02577791,Gordon Bell,1994,http://link.springer.com/article/10.1007/BF02577791,Article
Dynamic partitioning of multiprocessor systems,,International Journal of Parallel Programming,,18.0,2,10.1007/BF01491212,Kee-Hyun ParkLawrence W. Dowdy,1989,http://link.springer.com/article/10.1007/BF01491212,Article
Efficiently making (almost) any concurrency control mechanism serializable,,The VLDB Journal,,26.0,4,10.1007/s00778-017-0463-8,Tianzheng WangRyan JohnsonAlan FeketeIppokratis Pandis,2017,http://link.springer.com/article/10.1007/s00778-017-0463-8,Article
Energy and resource efficient workflow scheduling in a virtualized cloud environment,,Cluster Computing,,24.0,2,10.1007/s10586-020-03149-4,Neha GargDamanpreet SinghMajor Singh Goraya,2021,http://link.springer.com/article/10.1007/s10586-020-03149-4,Article
The optimal control approach to generalized multiprocessor scheduling,,Algorithmica,,15.0,1,10.1007/BF01942605,G. N. Srinivasa PrasannaB. R. Musicus,1996,http://link.springer.com/article/10.1007/BF01942605,Article
"Composing, analyzing and validating software models to assess the performability of competing design candidates",,Annals of Software Engineering,,8.0,4-Jan,10.1023/A:1018927430556,Frederick T. SheldonStefan Greiner,1999,http://link.springer.com/article/10.1023/A%3A1018927430556,Article
A Case for Chip Multiprocessors Based on the Data-Driven Multithreading Model,,International Journal of Parallel Programming,,34.0,3,10.1007/s10766-006-0016-z,Pedro TrancosoParaskevas EvripidouKyriakos StavrouCostas Kyriacou,2006,http://link.springer.com/article/10.1007/s10766-006-0016-z,Article
Window-based greedy contention management for transactional memory: theory and practice,,Distributed Computing,,25.0,3,10.1007/s00446-012-0159-7,Gokarna SharmaCostas Busch,2012,http://link.springer.com/article/10.1007/s00446-012-0159-7,Article
An algorithm of automatic workflow optimization,,Programming and Computer Software,,38.0,1,10.1134/S0361768812010045,A. A. Kalenkova,2012,http://link.springer.com/article/10.1134/S0361768812010045,Article
Constrained control of free piston engine generator based on implicit reference governor,,Science China Information Sciences,,61.0,7,10.1007/s11432-017-9337-1,Xun GongIlya KolmanovskyEmanuele GaroneKevin ZaseckHong Chen,2018,http://link.springer.com/article/10.1007/s11432-017-9337-1,Article
On piggyback runtime monitoring of object-oriented programs,,International Journal on Software Tools for Technology Transfer,,17.0,2,10.1007/s10009-014-0326-1,Sylvain HalléJason ValletRaphaël Tremblay-Lessard,2015,http://link.springer.com/article/10.1007/s10009-014-0326-1,Article
"Arno R. Lodder, DiaLaw: On Legal Justification and Dialogical Models of Argumentation. Law and Philosophy Library Vol. 42",,Artificial Intelligence and Law,,8.0,3-Feb,10.1023/A:1008345320940,Gerard A.W. Vreeswijk,2000,http://link.springer.com/article/10.1023/A%3A1008345320940,Article
REPLICA MBTAC: multithreaded dual-mode processor,,The Journal of Supercomputing,,74.0,5,10.1007/s11227-017-2199-z,Martti ForsellJussi RoivainenVille Leppänen,2018,http://link.springer.com/article/10.1007/s11227-017-2199-z,Article
Normalized particle swarm optimization for complex chooser option pricing on graphics processing unit,,The Journal of Supercomputing,,66.0,1,10.1007/s11227-013-0893-z,Bhanu SharmaRuppa K. ThulasiramParimala Thulasiraman,2013,http://link.springer.com/article/10.1007/s11227-013-0893-z,Article
Improving conformance checking in process modelling: a multiperspective algorithm,,The Journal of Supercomputing,,79.0,16,10.1007/s11227-023-05315-y,Rui CalhenoPaulo CarvalhoSolange Rito LimaPedro Rangel HenriquesMateo Ramos Merino,2023,http://link.springer.com/article/10.1007/s11227-023-05315-y,Article
Backward Inference in Bayesian Networks for Distributed Systems Management,,Journal of Network and Systems Management,,13.0,4,10.1007/s10922-005-9003-8,Jianguo DingBernd KrämerYingcai BaiHansheng Chen,2005,http://link.springer.com/article/10.1007/s10922-005-9003-8,Article
The specification of “specification”,,Minds and Machines,,5.0,2,10.1007/BF00974746,Derek PartridgeAntony Galton,1995,http://link.springer.com/article/10.1007/BF00974746,Article
A perspective on symbolic mathematical computing and artificial intelligence,,Annals of Mathematics and Artificial Intelligence,,19.0,4-Mar,10.1023/A:1018920108903,J. CalmetJ.A. Campbell,1997,http://link.springer.com/article/10.1023/A%3A1018920108903,Article
State-of-art approaches for review spammer detection: a survey,,Journal of Intelligent Information Systems,,50.0,2,10.1007/s10844-017-0454-7,Rupesh Kumar DewangAnil Kumar Singh,2018,http://link.springer.com/article/10.1007/s10844-017-0454-7,Article
"Imitation games: Turing, Menard, Van Meegeren",,Ethics and Information Technology,,5.0,1,10.1023/A:1024980304304,Brian P. BloomfieldTheo Vurdubakis,2003,http://link.springer.com/article/10.1023/A%3A1024980304304,Article
Riding Out the Storm: How to Deal with the Complexity of Grid and Cloud Management,,Journal of Grid Computing,,10.0,3,10.1007/s10723-012-9225-4,Jesús MontesAlberto SánchezMaría S. Pérez,2012,http://link.springer.com/article/10.1007/s10723-012-9225-4,Article
Improving on Linear Scan Register Allocation,,International Journal of Automation and Computing,,15.0,2,10.1007/s11633-017-1100-0,Shahrzad KananizadehKirill Kononenko,2018,http://link.springer.com/article/10.1007/s11633-017-1100-0,Article
Scheduling Task Parallel Applications for Rapid Turnaround on Enterprise Desktop Grids,,Journal of Grid Computing,,5.0,4,10.1007/s10723-007-9063-y,Derrick KondoAndrew A. ChienHenri Casanova,2007,http://link.springer.com/article/10.1007/s10723-007-9063-y,Article
Remote Method Delegation: a Platform for Grid Computing,,Journal of Grid Computing,,18.0,4,10.1007/s10723-020-09525-z,Bradley WoodBrock WatlingZachary WinnDaniel MessihaQusay H. MahmoudAkramul Azim,2020,http://link.springer.com/article/10.1007/s10723-020-09525-z,Article
Using quantitative models to search for appropriate organizational designs,,Autonomous Agents and Multi-Agent Systems,,16.0,2,10.1007/s10458-007-9020-y,Bryan HorlingVictor Lesser,2008,http://link.springer.com/article/10.1007/s10458-007-9020-y,Article
Systolic algorithms as programs,,Distributed Computing,,1.0,3,10.1007/BF01661171,K. Mani ChandyJ. Misra,1986,http://link.springer.com/article/10.1007/BF01661171,Article
ACME: A scalable parallel system for extracting frequent patterns from a very long sequence,,The VLDB Journal,,23.0,6,10.1007/s00778-014-0370-1,Majed SahliEssam MansourPanos Kalnis,2014,http://link.springer.com/article/10.1007/s00778-014-0370-1,Article
Estimating Effective Prefetch Distance in Threaded Prefetching for Linked Data Structures,,International Journal of Parallel Programming,,40.0,5,10.1007/s10766-012-0194-9,Yan HuangZhi-Min GuJie TangMin CaiJianxun ZhangNinghan Zheng,2012,http://link.springer.com/article/10.1007/s10766-012-0194-9,Article
Quantum entanglement as a new information processing resource,,New Generation Computing,,21.0,4,10.1007/BF03037304,Jozef Gruska,2003,http://link.springer.com/article/10.1007/BF03037304,Article
"Visualization, transformation, and analysis of execution traces with the eclipse TRACE4CPS trace tool",,International Journal on Software Tools for Technology Transfer,,26.0,1,10.1007/s10009-024-00736-3,Martijn HendriksJacques VerrietTwan Basten,2024,http://link.springer.com/article/10.1007/s10009-024-00736-3,Article
PRO-MOTION: Support for mobile database access,,Personal Technologies,,1.0,3,10.1007/BF01299651,Gary D. WalbornPanos K. Chrysanthis,1997,http://link.springer.com/article/10.1007/BF01299651,Article
The SQUID approach to defining a quality model,,Software Quality Journal,,6.0,3,10.1023/A:1018516103435,Barbara KitchenhamSteve LinkmanAlberto PasquiniVincenzo Nanni,1997,http://link.springer.com/article/10.1023/A%3A1018516103435,Article
Driving behavior analysis and classification by vehicle OBD data using machine learning,,The Journal of Supercomputing,,79.0,16,10.1007/s11227-023-05364-3,Raman kumarAnuj Jain,2023,http://link.springer.com/article/10.1007/s11227-023-05364-3,Article
A semantics for speech acts,,Annals of Mathematics and Artificial Intelligence,,8.0,2-Jan,10.1007/BF02451549,Munindar P. Singh,1993,http://link.springer.com/article/10.1007/BF02451549,Article
Backpropagation for Fully Connected Cascade Networks,,Neural Processing Letters,,46.0,1,10.1007/s11063-017-9588-4,Yiping Cheng,2017,http://link.springer.com/article/10.1007/s11063-017-9588-4,Article
A concurrent abstract interpreter,,LISP and Symbolic Computation,,7.0,3-Feb,10.1007/BF01018693,Stephen WeeksSuresh JagannathanJames Philbin,1994,http://link.springer.com/article/10.1007/BF01018693,Article
Dynamic thermal and IT resource management strategies for data center energy minimization,,Journal of Cloud Computing,,6.0,1,10.1186/s13677-017-0094-z,Lijun FuJianxiong WanJie YangDongdong CaoGefei Zhang,2017,http://link.springer.com/article/10.1186/s13677-017-0094-z,Article
Direct private query in location-based services with GPU run time analysis,,The Journal of Supercomputing,,71.0,2,10.1007/s11227-014-1309-4,Charles AsanyaRatan Guha,2015,http://link.springer.com/article/10.1007/s11227-014-1309-4,Article
The Design and Implementation of CoGaDB: A Column-oriented GPU-accelerated DBMS,,Datenbank-Spektrum,,14.0,3,10.1007/s13222-014-0164-z,Sebastian Breß,2014,http://link.springer.com/article/10.1007/s13222-014-0164-z,Article
A Loosely Coordinated Model for Heap-Based Priority Queues in Multicore Environments,,International Journal of Parallel Programming,,44.0,4,10.1007/s10766-015-0398-x,Giuliano LaccettiMarco LapegnaValeria Mele,2016,http://link.springer.com/article/10.1007/s10766-015-0398-x,Article
On specification of multiprocessor computing,,Acta Informatica,,27.0,8,10.1007/BF00264282,W. M. Turski,1990,http://link.springer.com/article/10.1007/BF00264282,Article
Accelerating Viterbi algorithm on graphics processing units,,Computing,,99.0,11,10.1007/s00607-017-0557-6,Muhammad Kashif HanifKarl-Heinz Zimmermann,2017,http://link.springer.com/article/10.1007/s00607-017-0557-6,Article
On the use of hybrid reinforcement learning for autonomic resource allocation,,Cluster Computing,,10.0,3,10.1007/s10586-007-0035-6,Gerald TesauroNicholas K. JongRajarshi DasMohamed N. Bennani,2007,http://link.springer.com/article/10.1007/s10586-007-0035-6,Article
Building a security reference architecture for cloud systems,,Requirements Engineering,,21.0,2,10.1007/s00766-014-0218-7,Eduardo B. FernandezRaul MongeKeiko Hashizume,2016,http://link.springer.com/article/10.1007/s00766-014-0218-7,Article
On the MHD boundary layer flow with diffusion and chemical reaction over a porous flat plate with suction/blowing: two reliable methods,,Engineering with Computers,,37.0,2,10.1007/s00366-019-00876-0,M. S. HashemiA. Akgül,2021,http://link.springer.com/article/10.1007/s00366-019-00876-0,Article
Experience Availability: Tail-Latency Oriented Availability in Software-Defined Cloud Computing,,Journal of Computer Science and Technology,,32.0,2,10.1007/s11390-017-1719-x,Bin-Lei CaiRong-Qi ZhangXiao-Bo ZhouLai-Ping ZhaoKe-Qiu Li,2017,http://link.springer.com/article/10.1007/s11390-017-1719-x,Article
A numerical method for fractional variable order pantograph differential equations based on Haar wavelet,,Engineering with Computers,,38.0,3,10.1007/s00366-020-01227-0,Hussam AlrabaiahIsrar AhmadRohul AminKamal Shah,2022,http://link.springer.com/article/10.1007/s00366-020-01227-0,Article
The Precautionary Approach Design Pattern,,Digital Society,,3.0,1,10.1007/s44206-024-00090-6,Tuomas Pöysti,2024,http://link.springer.com/article/10.1007/s44206-024-00090-6,Article
Christopher Strachey and the Cambridge CPL Compiler,,Higher-Order and Symbolic Computation,,13.0,2-Jan,10.1023/A:1010014110806,Martin Richards,2000,http://link.springer.com/article/10.1023/A%3A1010014110806,Article

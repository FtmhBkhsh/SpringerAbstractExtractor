Item Title,abstract,Publication Title,Book Series Title,Journal Volume,Journal Issue,Item DOI,Authors,Publication Year,URL,Content Type
DLchain: Blockchain with Deep Learning as Proof-of-Useful-Work,"Blockchains based on Proof-of-Work can maintain a distributed ledger with a high security guarantee but also lead to severe energy waste due to the useless hash calculation. Proof-of-Useful-Work (PoUW) mechanisms are alternatives, but finding hard puzzles with easy verification and useful results is challenging. Recent popular deep learning algorithms require large amount of computation resources due to the large-scale training datasets and the complexity of the models. The work of deep learning training is useful, and the model verification process is much shorter than its training process. Therefore, in this paper, we propose DLchain, a PoUW-based blockchain using deep learning training as the hard puzzle. Theoretical analysis shows that DLchain can achieve a security level comparable to existing PoW-based cryptocurrency when the miners’ best interest is to maximize their revenue. Notably, this is achieved without relying on common assumptions made in existing PoUW-based blockchain such as globally synchronized timestamps. Simulated experiments also show that the extra network delay caused by data transfer and the full nodes’ validation is acceptable.",Services – SERVICES 2020,,,,10.1007/978-3-030-59595-1_4,Changhao ChenliBoyang LiTaeho Jung,2020,http://link.springer.com/chapter/10.1007/978-3-030-59595-1_4,Chapter
Ofelimos: Combinatorial Optimization via Proof-of-Useful-Work,"Minimizing the energy cost and carbon footprint of the Bitcoin blockchain and related protocols is one of the most widely identified open questions in the cryptocurrency space. Substituting the proof-of-work (PoW) primitive in Nakamoto’s longest-chain protocol with a proof of useful work (PoUW) has been long theorized as an ideal solution in many respects but, to this day, the concept still lacks a convincingly secure realization.",Advances in Cryptology – CRYPTO 2022,,,,10.1007/978-3-031-15979-4_12,Matthias FitziAggelos KiayiasGiorgos PanagiotakosAlexander Russell,2022,http://link.springer.com/chapter/10.1007/978-3-031-15979-4_12,Chapter
A Decentralized Data Processing Framework Based on PoUW Blockchain,"Conventional master/slave-based data processing frameworks are vulnerable to single point of failure and performance bottlenecks of the master node. In contrast, blockchain systems adopt a decentralized framework and are capable of aggregating enormous computing resources. In this paper, we propose a blockchain-based data processing framework that utilizes the advantages of the blockchain for solving the drawbacks of the centralized framework. In our framework, the blockchain stores the task information and the adopted proof of useful work consensus enables nodes to process tasks using their computing resources, while competing for the leader (who dispatches pending tasks to the blockchain). Extensive simulations show that the proposed framework is better than the centralized framework in terms of the throughput and the task response time.",Blockchain and Trustworthy Systems,,,,10.1007/978-981-15-9213-3_45,Guangcheng LiQinglin ZhaoXianfeng Li,2020,http://link.springer.com/chapter/10.1007/978-981-15-9213-3_45,Chapter
Provably Secure Blockchain Protocols from Distributed Proof-of-Deep-Learning,"Proof-of-useful-work (PoUW), an alternative to the widely used proof-of-work (PoW), aims to re-purpose the network’s computing power. Namely, users evaluate meaningful computational problems, e.g., solving optimization problems, instead of computing numerous hash function values as in PoW. A recent approach utilizes the training process of deep learning as “useful work”. However, these works lack security analysis when deploying them with blockchain-based protocols, let alone the informal and over-complicated system design. This work proposes a distributed proof-of-deep-learning (D-PoDL) scheme concerning PoUW’s requirements. With a novel hash-traininßg-hash structure and model-referencing mechanism, our scheme is the first deep learning-based PoUW scheme that enables achieving better accuracy distributively. Next, we introduce a transformation from the D-PoDL scheme to a generic D-PoDL blockchain protocol which can be instantiated with two chain selection rules, i.e., the longest-chain rule and the weight-based blockchain framework (LatinCrypt’ 21). This work is the first to provide formal proofs for deep learning-involved blockchain protocols concerning the robust ledger properties, i.e., chain growth, chain quality, and common prefix. Finally, we implement the D-PoDL scheme to discuss the effectiveness of our design.",Network and System Security,,,,10.1007/978-3-031-39828-5_7,Xiangyu SuMario LarangeiraKeisuke Tanaka,2023,http://link.springer.com/chapter/10.1007/978-3-031-39828-5_7,Chapter
A Survey on the Application of SGX in Blockchain Area,"As an emerging technology, blockchain is widely used in encrypted digital currencies and has an important impact in various fields such as finance, cloud storage, and Internet of things (IoT), etc. However, it faces various challenges in the process of its development and application: waste of resources, limited privacy protection, poor scalability, etc. Intel Software Guard Extensions (SGX), as a new trusted computing technology, brings solutions to the above challenges in the blockchain field. Based on the hierarchical structure of the blockchain, we are the first to systematically discuss the application status of SGX in the blockchian, including consensus layer, the ledger topology layer, the contract layer, and the application layer. Meanwhile, we summarize the advantages and challenges of SGX in the field of the blockchain, and look forward to the future development direction and the possible research topics.",Blockchain and Trustworthy Systems,,,,10.1007/978-981-15-9213-3_49,Hong LeiQinghao WangWenbo ShiZijian Bao,2020,http://link.springer.com/chapter/10.1007/978-981-15-9213-3_49,Chapter
Mining for Better: An Energy-Recycling Consensus Algorithm to Enhance Stability with Deep Learning,"As the most popular consensus algorithm for blockchain, the Proof-of-Work (PoW) is suffering from the inability of handling computing power fluctuations. Meanwhile, PoW consumes a significant amount of energy without producing actual value. To address these issues, this paper proposes a deep learning-based consensus framework called Proof-of-Improvement (PoI), which recycles the energy from mining blocks to improve the blockchain itself. In PoI, a new reward mechanism is used to encourage miners to include the high-accuracy model in their blocks. Then, based on PoI, a difficulty adjustment algorithm is designed. Experiments are done on real-world data and the result shows the proposed algorithm’s proficiency in preserving block time stability with fluctuating hash rates. To the best of the authors’ knowledge, PoI is the first to handle both energy recycling and difficulty adjustment concurrently.",Information Security Practice and Experience,,,,10.1007/978-981-99-7032-2_34,Zhen XiaZhenfu CaoJiachen ShenXiaolei DongJun ZhouLiming FangZhe LiuChunpeng GeChunhua Su,2023,http://link.springer.com/chapter/10.1007/978-981-99-7032-2_34,Chapter
P2A: Privacy Preserving Anonymous Authentication Based on Blockchain and SGX,"Modern Identify-as-a-Service solutions solve the problems of burdensome user credential management and non-uniform security strength, by introducing an Identity Provider (IdP) that holds the users’ identities and grants a user one-time access tokens when he/she tries to login to different online applications (known as the Relying Parties, RPs). However, the non-negligible problem of privacy leakage during authentication largely remains unattended. In this paper, we propose a Privacy Preserving Anonymous Authentication Scheme (P2A) with Blockchain and Intel Software Guard Extensions (SGX). The IdP in P2A manages the users’ identities by issuing different kinds of transactions in the Blockchain, covering the registration, update, freeze/thaw, and deletion of identities. When the user wants to login to an RP, instead of asking for an one-time token from the IdP, he can generate an identity proof locally with SGX and login to the RP with an RP-specific pseudonym (PN). By resorting to the Blockchain, the RP will be convinced that the PN is associated with some registered identity on IdP and specific attributes of the user are satisfactory, without obtaining the real identity and raw attributes of the user. In this way, privacy leakages to the IdP and RPs are eliminated. P2A has a few exciting new features and security analysis shows it can resist various attacks even under strict assumptions.",Information Security and Cryptology,,,,10.1007/978-3-030-71852-7_17,Tianlin SongWei WangFan LangWenyi OuyangQiongxiao WangJingqiang Lin,2021,http://link.springer.com/chapter/10.1007/978-3-030-71852-7_17,Chapter
BCSolid: A Blockchain-Based Decentralized Data Storage and Authentication Scheme for Solid,"Solid (Social Linked Data) aims to radically change the way web applications work today, giving users true data ownership and improved privacy. However, it is facing two challenges, one is that data in centralized repositories needs to be separated from social web applications that force users to share their information. In addition, a decentralized authentication that guarantees who can operate on user’s data with a secure privacy protection is another significant issue. In this paper, we address these challenges by proposing a blockchain-based decentralized data storage and authentication scheme for Solid, termed BCSolid, in which a user’s data can be independent of multiple web applications and can switch data storage service easily without relying on a trusted third party. Meanwhile, our scheme gurantees data ownership and user’s privacy by leveraging the blockchain miners to perform authentication with the help of certificateless cryptography. Additionally, we present a possible instantiation to illustrate how “transactions” in BCSolid are processed. To our knowledge this is the first work to promote the Solid project using blockchain. The evaluation results show that our scheme can gurantee a low latency network and is a promising solution to Solid.",Blockchain and Trustworthy Systems,,,,10.1007/978-981-15-2777-7_55,Ting CaiWuhui ChenYang Yu,2020,http://link.springer.com/chapter/10.1007/978-981-15-2777-7_55,Chapter
Analysis of Models for Decentralized and Collaborative AI on Blockchain,"Machine learning has recently enabled large advances in artificial intelligence, but these results can be highly centralized. The large datasets required are generally proprietary; predictions are often sold on a per-query basis; and published models can quickly become out of date without effort to acquire more data and maintain them. Published proposals to provide models and data for free for certain tasks include Microsoft Research’s Decentralized and Collaborative AI on Blockchain. The framework allows participants to collaboratively build a dataset and use smart contracts to share a continuously updated model on a public blockchain. The initial proposal gave an overview of the framework omitting many details of the models used and the incentive mechanisms in real world scenarios. For example, the Self-Assessment incentive mechanism proposed in their work could have problems such as participants losing deposits and the model becoming inaccurate over time if the proper parameters are not set when the framework is configured. In this work, we evaluate the use of several models and configurations in order to propose best practices when using the Self-Assessment incentive mechanism so that models can remain accurate and well-intended participants that submit correct data have the chance to profit. We have analyzed simulations for each of three models: Perceptron, Naïve Bayes, and a Nearest Centroid Classifier, with three different datasets: predicting a sport with user activity from Endomondo, sentiment analysis on movie reviews from IMDB, and determining if a news article is fake. We compare several factors for each dataset when models are hosted in smart contracts on a public blockchain: their accuracy over time, balances of a good and bad user, and transaction costs (or gas) for deploying, updating, collecting refunds, and collecting rewards. A free and open source implementation for the Ethereum blockchain of these models is provided at https://github.com/microsoft/0xDeCA10B.",Blockchain – ICBC 2020,,,,10.1007/978-3-030-59638-5_10,Justin D. Harris,2020,http://link.springer.com/chapter/10.1007/978-3-030-59638-5_10,Chapter
CloudAgora: Democratizing the Cloud,"In this paper we present CloudAgora, a platform that enables the realization of a democratic and fully decentralized cloud computing market where participating parties enjoy significant advantages: On one hand, cloud consumers have access to low-cost storage and computation without having to blindly trust any central authority. On the other hand, any individual or company, big or small, can potentially serve as cloud provider. Idle resources, be it CPU or disk space, are monetized and offered in competitive fees, regulated by the law of supply and demand. In the heart of the platform lies the blockchain technology, which is used to record commitment policies, publicly verify off-chain services and trigger automatic micropayments. Our prototype is built on top of the Ethereum blockchain and is provided as an open source project.",Blockchain – ICBC 2019,,,,10.1007/978-3-030-23404-1_10,Katerina DokaTasos BakogiannisIoannis MytilinisGeorgios Goumas,2019,http://link.springer.com/chapter/10.1007/978-3-030-23404-1_10,Chapter
Proof-of-Blackouts? How Proof-of-Work Cryptocurrencies Could Affect Power Grids,"With respect to power consumption, cryptocurrencies have been discussed in a twofold way: First, the cost-benefit ratio of mining hardware in order to gain revenue from mining that exceeds investment and electricity costs. Second, the overall electric energy consumption of cryptocurrencies to estimate the environmental effects of Proof-of-Work. In this paper, we consider a complementary aspect: The stability of the power grids themselves. Power grids have to continuously maintain an equilibrium between power supply and consumption; extended periods of imbalance cause significant deviation of the utility frequency from its nominal value and destabilize the power grid, eventually leading to large-scale blackouts. Proof-of-Work cryptocurrencies are potential candidates for creating such imbalances as disturbances in mining can cause abrupt changes in power demand. The problem is amplified by the ongoing centralization of mining hardware in large mining pools. Therefore, we investigate power consumption characteristics of miners, consult mining pool data, and analyze the amount of total power consumption as well as its worldwide distribution of two major cryptocurrencies, namely Bitcoin and Ethereum. Thus, answering the question: Are Proof-of-Work based cryptocurrencies a threat to reliable power grid operation?.","Research in Attacks, Intrusions, and Defenses",,,,10.1007/978-3-030-00470-5_9,Johanna UllrichNicholas StifterAljosha JudmayerAdrian DabrowskiEdgar Weippl,2018,http://link.springer.com/chapter/10.1007/978-3-030-00470-5_9,Chapter
Decentralized Combinatorial Optimization,"Combinatorial optimization is a widely-studied class of computational problems with many theoretical and real-world applications. Optimization problems are typically tackled using hardware and software controlled by the user. Optimization can be competitive where problems are solved by competing agents in isolation, or by groups sharing hardware and software in a distributed manner.",Parallel Problem Solving from Nature – PPSN XVI,,,,10.1007/978-3-030-58112-1_25,Lee A. Christie,2020,http://link.springer.com/chapter/10.1007/978-3-030-58112-1_25,Chapter
Decentralization in Bitcoin and Ethereum Networks,"Blockchain-based cryptocurrencies have demonstrated how to securely implement traditionally centralized systems, such as currencies, in a decentralized fashion. However, there have been few measurement studies on the level of decentralization they achieve in practice. We present a measurement study on various decentralization metrics of two of the leading cryptocurrencies with the largest market capitalization and user base, Bitcoin and Ethereum. We investigate the extent of decentralization by measuring the network resources of nodes and the interconnection among them, the protocol requirements affecting the operation of nodes, and the robustness of the two systems against attacks. In particular, we adapted existing internet measurement techniques and used the Falcon Relay Network as a novel measurement tool to obtain our data. We discovered that neither Bitcoin nor Ethereum has strictly better properties than the other. We also provide concrete suggestions for improving both systems.",Financial Cryptography and Data Security,,,,10.1007/978-3-662-58387-6_24,Adem Efe GencerSoumya BasuIttay EyalRobbert van RenesseEmin Gün Sirer,2018,http://link.springer.com/chapter/10.1007/978-3-662-58387-6_24,Chapter
Short Paper: The Proof is in the Pudding,"We propose a proof of work protocol that computes the discrete logarithm of an element in a cyclic group. Individual provers generating proofs of work perform a distributed version of the Pollard rho algorithm. Such a protocol could capture the computational power expended to construct proof-of-work-based blockchains for a more useful purpose, as well as incentivize advances in hardware, software, or algorithms for an important cryptographic problem. We describe our proposed construction and elaborate on challenges and potential trade-offs that arise in designing a practical proof of work.",Financial Cryptography and Data Security,,,,10.1007/978-3-030-32101-7_24,Marcella HastingsNadia HeningerEric Wustrow,2019,http://link.springer.com/chapter/10.1007/978-3-030-32101-7_24,Chapter
Twisting Lattice and Graph Techniques to Compress Transactional Ledgers,"Keeping track of financial transactions (e.g., in banks and blockchains) means keeping track of an ever-increasing list of exchanges between accounts. In fact, many of these transactions can be safely “forgotten”, in the sense that purging a set of them that compensate each other does not impact the network’s semantic meaning (e.g., the accounts’ balances). We call nilcatenation a collection of transactions having no effect on a network’s semantics. Such exchanges may be archived and removed, yielding a smaller, but equivalent ledger. Motivated by the computational and analytic benefits obtained from more compact representations of numerical data, we formalize the problem of finding nilcatenations, and propose detection methods based on graph and lattice-reduction techniques. Atop interesting applications of this work (e.g., decoupling of centralized and distributed databases), we also discuss the original idea of a “community-serving proof of work”: finding nilcatenations constitutes a proof of useful work, as the periodic removal of nilcatenations reduces the transactional graph’s size.",Security and Privacy in Communication Networks,,,,10.1007/978-3-319-78813-5_6,Rémi GéraudDavid NaccacheRăzvan Roşie,2018,http://link.springer.com/chapter/10.1007/978-3-319-78813-5_6,Chapter
A Framework of Data Sharing System with Decentralized Network,"With the development of technology, more and more data have been accumulated. Utilization of data can benefit many applications, such as facilitate human daily life, promote scientific research, and expedite event detection etc. How to share data within a certain group or a specific person securely and effectively has become a hot research topic. Meanwhile, many distributed technologies have appeared with the triggering of many centralized cloud web services. Thus, we propose a block-chain based data sharing framework with IPFS (https://ipfs.io/), Ethereum (https://www.ethereum.org/) and uPort (https://www.uport.me/). As a result of this design, the system could store data in IPFS system and control sensitive data by block-chain, and the authentication can be managed by the uPort ID system. Finally, we evaluate the effectiveness by a case study.",Big Scientific Data Management,,,,10.1007/978-3-030-28061-1_25,Pengfei WangWenjuan CuiJianhui Li,2019,http://link.springer.com/chapter/10.1007/978-3-030-28061-1_25,Chapter
Randomized algorithms for metrical task systems,"Borodin, Linial, and Saks introduce a general model for online systems in [BLS92] called task systems and show a deterministic algorithm which achieves a competitive ratio of 2n−1 for any metrical task system with n states. We present a randomized algorithm which achieves a competitive ratio of e/(e−1)n−1/(e−1)≈1.5820n−0.5820 for any metrical task system of n states. For the uniform metric space, Borodin, Linial, and Saks present an algorithm which achieves a competitive ratio of 2H n, and they show a lower bound of H n for any randomized algorithm. We improve their upper bound for the uniform metric space by showing a randomized algorithm which is (H n/ln2+1≈1.4427H n +1)-competitive.",Algorithms and Data Structures,,,,10.1007/3-540-60220-8_59,Sandy IraniSteve Seiden,1995,http://link.springer.com/chapter/10.1007/3-540-60220-8_59,Chapter
Integrated Power Plant and Bitcoin Mining Economics,"Bitcoin mining can be a difficult process to understand much less model. It is confounded by currency exchange rates and jurisdictional taxes along with rapid historical technological development. We present a framework for simplifying the economic modeling process for bitcoin. To account for historical and potential future technological changes, we model trends in bitcoin miner performance showing that further gains in efficiency have plateaued. Then, we derive the marginal value of bitcoin treating the process of the block reward in a quantum mechanical framework and show that the measure of bitcoin’s value is the energy used to mine it. Finally, we use the energy value of bitcoin to model the dollar price of bitcoin with a power law relationship over bitcoin’s entire price history.",Financial Cryptography and Data Security. FC 2022 International Workshops,,,,10.1007/978-3-031-32415-4_3,Cal Abel,2023,http://link.springer.com/chapter/10.1007/978-3-031-32415-4_3,Chapter
Proofs of Work From Worst-Case Assumptions,"We give Proofs of Work (PoWs) whose hardness is based on well-studied worst-case assumptions from fine-grained complexity theory. This extends the work of (Ball et al., STOC ’17), that presents PoWs that are based on the Orthogonal Vectors, 3SUM, and All-Pairs Shortest Path problems. These, however, were presented as a ‘proof of concept’ of provably secure PoWs and did not fully meet the requirements of a conventional PoW: namely, it was not shown that multiple proofs could not be generated faster than generating each individually. We use the considerable algebraic structure of these PoWs to prove that this non-amortizability of multiple proofs does in fact hold and further show that the PoWs’ structure can be exploited in ways previous heuristic PoWs could not.",Advances in Cryptology – CRYPTO 2018,,,,10.1007/978-3-319-96884-1_26,Marshall BallAlon RosenManuel SabinPrashant Nalini Vasudevan,2018,http://link.springer.com/chapter/10.1007/978-3-319-96884-1_26,Chapter
Leveraging the Verifier’s Dilemma to Double Spend in Bitcoin,,Financial Cryptography and Data Security,,,,10.1007/978-3-031-47751-5_9,Tong CaoJérémie DecouchantJiangshan Yu,2024,http://link.springer.com/chapter/10.1007/978-3-031-47751-5_9,Chapter
The cost of order in asynchronous systems,,Distributed Algorithms,,,,10.1007/3-540-56188-9_22,Aleta RicciardiKenneth BirmanPatrick Stephenson,1992,http://link.springer.com/chapter/10.1007/3-540-56188-9_22,Chapter
Modelling a distributed cached store for garbage collection: The algorithm and its correctness proof,,ECOOP’98 — Object-Oriented Programming,,,,10.1007/BFb0054094,Paulo FerreiraMarc Shapiro,1998,http://link.springer.com/chapter/10.1007/BFb0054094,Chapter
PoS: Constructing Practical and Efficient Public Key Cryptosystems Based on Symmetric Cryptography with SGX,,Information and Communications Security,,,,10.1007/978-3-030-01950-1_47,Huorong LiJingqiang LinBingyu LiWangzhao Cheng,2018,http://link.springer.com/chapter/10.1007/978-3-030-01950-1_47,Chapter
An automaton-driven frame disposal algorithm and its proof of correctness,,"Algorithms, Concurrency and Knowledge",,,,10.1007/3-540-60688-2_37,M. SatpathyA. SanyalG. Venkatesh,1995,http://link.springer.com/chapter/10.1007/3-540-60688-2_37,Chapter
Querying Proofs,,"Logic for Programming, Artificial Intelligence, and Reasoning",,,,10.1007/978-3-642-28717-6_10,David AspinallEwen DenneyChristoph Lüth,2012,http://link.springer.com/chapter/10.1007/978-3-642-28717-6_10,Chapter
On-the-fly garbage collection: New algorithms inspired by program proofs,,"Automata, Languages and Programming",,,,10.1007/BFb0012753,Mordechai Ben-Ari,1982,http://link.springer.com/chapter/10.1007/BFb0012753,Chapter
Do You Believe in Tinker Bell? The Social Externalities of Trust,,Security Protocols XXIII,,,,10.1007/978-3-319-26096-9_23,Khaled BaqerRoss Anderson,2015,http://link.springer.com/chapter/10.1007/978-3-319-26096-9_23,Chapter
Energy Efficient Deadline Scheduling in Two Processor Systems,,Algorithms and Computation,,,,10.1007/978-3-540-77120-3_42,Tak-Wah LamLap-Kei LeeIsaac K. K. ToPrudence W. H. Wong,2007,http://link.springer.com/chapter/10.1007/978-3-540-77120-3_42,Chapter
LFthreads: A Lock-Free Thread Library,,Principles of Distributed Systems,,,,10.1007/978-3-540-77096-1_16,Anders GidenstamMarina Papatriantafilou,2007,http://link.springer.com/chapter/10.1007/978-3-540-77096-1_16,Chapter
Modeling and Analysis of Checkpoint I/O Operations,,Analytical and Stochastic Modeling Techniques and Applications,,,,10.1007/978-3-642-02205-0_27,Sarala ArunagiriJohn T. DalyPatricia J. Teller,2009,http://link.springer.com/chapter/10.1007/978-3-642-02205-0_27,Chapter
Wittgenstein’s Picture-Investigations,,Diagrammatic Representation and Inference,,,,10.1007/978-3-030-86062-2_10,Michael A. R. Biggs,2021,http://link.springer.com/chapter/10.1007/978-3-030-86062-2_10,Chapter
Quantifying Ecological Efficiency in Cloud Computing,,"Economics of Grids, Clouds, Systems, and Services",,,,10.1007/978-3-319-02414-1_6,Gregory KatsarosPascal Stichler,2013,http://link.springer.com/chapter/10.1007/978-3-319-02414-1_6,Chapter
Maximizing Remote Work in Flooding-Based Peer-to-Peer Systems,,Distributed Computing,,,,10.1007/978-3-540-39989-6_24,Qixiang SunNeil DaswaniHector Garcia-Molina,2003,http://link.springer.com/chapter/10.1007/978-3-540-39989-6_24,Chapter
Automated Reasoning Service for HOL Light,,Intelligent Computer Mathematics,,,,10.1007/978-3-642-39320-4_8,Cezary KaliszykJosef Urban,2013,http://link.springer.com/chapter/10.1007/978-3-642-39320-4_8,Chapter
Performance Analysis Techniques for Task-Based OpenMP Applications,,OpenMP in a Heterogeneous World,,,,10.1007/978-3-642-30961-8_15,Dirk SchmidlPeter PhilippenDaniel LorenzChristian RösselMarkus GeimerDieter an MeyBernd MohrFelix Wolf,2012,http://link.springer.com/chapter/10.1007/978-3-642-30961-8_15,Chapter
On the correctness of a distributed memory Gröbner basis algorithm,,Rewriting Techniques and Applications,,,,10.1007/978-3-662-21551-7_7,Soumen ChakrabartiKatherine Yelick,1993,http://link.springer.com/chapter/10.1007/978-3-662-21551-7_7,Chapter
Modular Termination Verification for Non-blocking Concurrency,,Programming Languages and Systems,,,,10.1007/978-3-662-49498-1_8,Pedro da Rocha PintoThomas Dinsdale-YoungPhilippa GardnerJulian Sutherland,2016,http://link.springer.com/chapter/10.1007/978-3-662-49498-1_8,Chapter
Quantum Challenges,,SOFSEM’99: Theory and Practice of Informatics,,,,10.1007/3-540-47849-3_1,Jozef Gruska,1999,http://link.springer.com/chapter/10.1007/3-540-47849-3_1,Chapter
Specification and verification in higher order algebra: A case study of convolution,,"Higher-Order Algebra, Logic, and Term Rewriting",,,,10.1007/3-540-58233-9_10,K. MeinkeL. J. Steggles,1994,http://link.springer.com/chapter/10.1007/3-540-58233-9_10,Chapter
Nonlinear Stabilizers in Optimal Control Problems with Infinite Time Horizon,,System Modeling and Optimization,,,,10.1007/978-3-642-36062-6_29,Alexander TarasyevAnastasia Usova,2013,http://link.springer.com/chapter/10.1007/978-3-642-36062-6_29,Chapter
From abstract data types to logical frameworks,,Recent Trends in Data Type Specification,,,,10.1007/BFb0014422,José MeseguerNarciso Marti-Oliet,1995,http://link.springer.com/chapter/10.1007/BFb0014422,Chapter
Locality-Based Relaxation: An Efficient Method for GPU-Based Computation of Shortest Paths,,Topics in Theoretical Computer Science,,,,10.1007/978-3-319-68953-1_5,Mohsen SafariAli Ebnenasir,2017,http://link.springer.com/chapter/10.1007/978-3-319-68953-1_5,Chapter
Relaxation for massively parallel discrete event simulation,,Performance Evaluation of Computer and Communication Systems,,,,10.1007/BFb0013858,Boris D. Lubachevsky,1993,http://link.springer.com/chapter/10.1007/BFb0013858,Chapter
Real Time Clocks Versus Virtual Clocks,,Control Flow and Data Flow: Concepts of Distributed Programming,,,,10.1007/978-3-642-82921-5_11,Krzysztof R. AptJean-Luc Richier,1986,http://link.springer.com/chapter/10.1007/978-3-642-82921-5_11,Chapter
Accelerating by Idling: How Speculative Delays Improve Performance of Message-Oriented Systems,,Euro-Par 2017: Parallel Processing,,,,10.1007/978-3-319-64203-1_13,Aleksandar Prokopec,2017,http://link.springer.com/chapter/10.1007/978-3-319-64203-1_13,Chapter
Implementing Execution-Time Clocks for the Ada Ravenscar Profile,,Reliable Software Technologies - Ada-Europe 2004,,,,10.1007/978-3-540-24841-5_10,Juan ZamoranoAlejandro AlonsoJosé Antonio PulidoJuan Antonio de la Puente,2004,http://link.springer.com/chapter/10.1007/978-3-540-24841-5_10,Chapter
"$$\mathtt {MOTIF}$$
                
                  MOTIF
                
              : (Almost) Free Branching in GMW",,Advances in Cryptology – ASIACRYPT 2020,,,,10.1007/978-3-030-64840-4_1,David HeathVladimir KolesnikovStanislav Peceny,2020,http://link.springer.com/chapter/10.1007/978-3-030-64840-4_1,Chapter
Philosophical Aspects of Computerized Verification of Mathematics,,Automated Reasoning with Analytic Tableaux and Related Methods,,,,10.1007/3-540-69778-0_1,N. G. de Bruijn,1998,http://link.springer.com/chapter/10.1007/3-540-69778-0_1,Chapter
DDM-CMP: Data-Driven Multithreading on a Chip Multiprocessor,,"Embedded Computer Systems: Architectures, Modeling, and Simulation",,,,10.1007/11512622_39,Kyriakos StavrouParaskevas EvripidouPedro Trancoso,2005,http://link.springer.com/chapter/10.1007/11512622_39,Chapter
Timing Properties and Correctness for Structured Parallel Programs on x86-64 Multicores,,Foundational and Practical Aspects of Resource Analysis,,,,10.1007/978-3-319-46559-3_6,Kevin HammondChristopher BrownSusmit Sarkar,2016,http://link.springer.com/chapter/10.1007/978-3-319-46559-3_6,Chapter
Failboxes: Provably Safe Exception Handling,,ECOOP 2009 – Object-Oriented Programming,,,,10.1007/978-3-642-03013-0_22,Bart JacobsFrank Piessens,2009,http://link.springer.com/chapter/10.1007/978-3-642-03013-0_22,Chapter
Reasoning About Shared-Variable Concurrency: Interactions Between Research Threads,,Formal Methods. FM 2019 International Workshops,,,,10.1007/978-3-030-54997-8_3,Cliff B. Jones,2020,http://link.springer.com/chapter/10.1007/978-3-030-54997-8_3,Chapter
Distributed resource sharing in computer networks,,Foundations of Software Technology and Theoretical Computer Science,,,,10.1007/3-540-17179-7_19,Inder S. GopalParviz Kermani,1986,http://link.springer.com/chapter/10.1007/3-540-17179-7_19,Chapter
Computability on Quasi-Polish Spaces,,Descriptional Complexity of Formal Systems,,,,10.1007/978-3-030-23247-4_13,Mathieu HoyrupCristóbal RojasVictor SelivanovDonald M. Stull,2019,http://link.springer.com/chapter/10.1007/978-3-030-23247-4_13,Chapter
Retrospective and Prospective for Unifying Theories of Programming,,Unifying Theories of Programming,,,,10.1007/11768173_1,Eric Hehner,2006,http://link.springer.com/chapter/10.1007/11768173_1,Chapter
Bin Packing with Linear Usage Costs – An Application to Energy Management in Data Centres,,Principles and Practice of Constraint Programming,,,,10.1007/978-3-642-40627-0_7,Hadrien CambazardDeepak MehtaBarry O’SullivanHelmut Simonis,2013,http://link.springer.com/chapter/10.1007/978-3-642-40627-0_7,Chapter
Online Flow Time Scheduling in the Presence of Preemption Overhead,,"Approximation, Randomization, and Combinatorial Optimization. Algorithms and Techniques",,,,10.1007/978-3-642-32512-0_8,Ho-Leung ChanTak-Wah LamRongbin Li,2012,http://link.springer.com/chapter/10.1007/978-3-642-32512-0_8,Chapter
XOR MACs: New Methods for Message Authentication Using Finite Pseudorandom Functions,,Advances in Cryptology — CRYPT0’ 95,,,,10.1007/3-540-44750-4_2,Mihir BellareRoch GuérinPhillip Rogaway,1995,http://link.springer.com/chapter/10.1007/3-540-44750-4_2,Chapter
Splice: Aspects That Analyze Programs,,Generative Programming and Component Engineering,,,,10.1007/978-3-540-30175-2_2,Sean McDirmidWilson C. Hsieh,2004,http://link.springer.com/chapter/10.1007/978-3-540-30175-2_2,Chapter
Highly-available data services for UNIX client-server networks: Why fault-tolerant hardware isn't the answer,,Hardware and Software Architectures for Fault Tolerance,,,,10.1007/BFb0020041,Andrea BorrCarol Wilhelmy,1994,http://link.springer.com/chapter/10.1007/BFb0020041,Chapter
Multi-byte Regular Expression Matching with Speculation,,Recent Advances in Intrusion Detection,,,,10.1007/978-3-642-04342-0_15,Daniel LuchaupRandy SmithCristian EstanSomesh Jha,2009,http://link.springer.com/chapter/10.1007/978-3-642-04342-0_15,Chapter
Garbage collection in multischeme,,Parallel Lisp: Languages and Systems,,,,10.1007/BFb0024153,James S. MillerBarbara S. Epstein,1990,http://link.springer.com/chapter/10.1007/BFb0024153,Chapter
A calculus of broadcasting systems,,TAPSOFT '91,,,,10.1007/3-540-53982-4_19,K. V. S. Prasad,1991,http://link.springer.com/chapter/10.1007/3-540-53982-4_19,Chapter
An Intrusion-Resilient Authorization and Authentication Framework for Grid Computing Infrastructure,,Computational Science – ICCS 2005,,,,10.1007/11428862_32,Yuanbo GuoJianfeng MaYadi Wang,2005,http://link.springer.com/chapter/10.1007/11428862_32,Chapter
Parsimonious Asynchronous Byzantine-Fault-Tolerant Atomic Broadcast,,Principles of Distributed Systems,,,,10.1007/11795490_9,HariGovind V. RamasamyChristian Cachin,2006,http://link.springer.com/chapter/10.1007/11795490_9,Chapter
DISSECT: DIStribution for SECurity Tool,,Information Security,,,,10.1007/3-540-45439-X_9,Enriquillo ValdezMoti Yung,2001,http://link.springer.com/chapter/10.1007/3-540-45439-X_9,Chapter
Self-stabilizing Byzantine Resilient Topology Discovery and Message Delivery,,Networked Systems,,,,10.1007/978-3-642-40148-0_4,Shlomi DolevOmri LibaElad M. Schiller,2013,http://link.springer.com/chapter/10.1007/978-3-642-40148-0_4,Chapter
Meta-programming with Typed Object-Language Representations,,Generative Programming and Component Engineering,,,,10.1007/978-3-540-30175-2_8,Emir PašalićNathan Linger,2004,http://link.springer.com/chapter/10.1007/978-3-540-30175-2_8,Chapter
Towards the Effective Descriptive Set Theory,,Evolving Computability,,,,10.1007/978-3-319-20028-6_33,Victor Selivanov,2015,http://link.springer.com/chapter/10.1007/978-3-319-20028-6_33,Chapter
A (Proto) Logical Basis for the Notion of a Structured Argument in a Safety Case,,Formal Methods and Software Engineering,,,,10.1007/978-3-319-47846-3_1,Valentín CassanoThomas S. E. MaibaumSilviya Grigorova,2016,http://link.springer.com/chapter/10.1007/978-3-319-47846-3_1,Chapter
The Inverse Function Approach to Sensor-Driven Kinematic Control of Redundant Manipulators,,Kinematic and Dynamic Issues in Sensor Based Control,,,,10.1007/978-3-642-84012-8_2,Charles W. Wampler II,1990,http://link.springer.com/chapter/10.1007/978-3-642-84012-8_2,Chapter
A User-Friendly Approach to Human Authentication of Messages,,Financial Cryptography and Data Security,,,,10.1007/11507840_21,Jeff KingAndre dos Santos,2005,http://link.springer.com/chapter/10.1007/11507840_21,Chapter
Prototyping Data Warehouse Systems,,Data Warehousing and Knowledge Discovery,,,,10.1007/3-540-44801-2_20,Thanh N. HuynhJosef Schiefer,2001,http://link.springer.com/chapter/10.1007/3-540-44801-2_20,Chapter
Fast priority queues for parallel branch-and-bound,,Parallel Algorithms for Irregularly Structured Problems,,,,10.1007/3-540-60321-2_30,Peter Sanders,1995,http://link.springer.com/chapter/10.1007/3-540-60321-2_30,Chapter
Which E-Voting Problems Do We Need to Solve?,,Advances in Cryptology – CRYPTO 2021,,,,10.1007/978-3-030-84242-0_1,Vanessa Teague,2021,http://link.springer.com/chapter/10.1007/978-3-030-84242-0_1,Chapter
Artificial life needs a real epistemology,,Advances in Artificial Life,,,,10.1007/3-540-59496-5_286,H. H. Pattee,1995,http://link.springer.com/chapter/10.1007/3-540-59496-5_286,Chapter
Comparing Power Flow Models in Tree Networks with Stochastic Load Demands,,Operations Research and Enterprise Systems,,,,10.1007/978-3-031-49662-2_8,M. H. M. ChristianenM. VlasiouB. Zwart,2024,http://link.springer.com/chapter/10.1007/978-3-031-49662-2_8,Chapter
Physical Addressing on Real Hardware in Isabelle/HOL,,Interactive Theorem Proving,,,,10.1007/978-3-319-94821-8_1,Reto AchermannLukas HumbelDavid CockTimothy Roscoe,2018,http://link.springer.com/chapter/10.1007/978-3-319-94821-8_1,Chapter
A predicative semantics for the refinement of real-time systems,,Mathematical Foundations of Programming Semantics,,,,10.1007/3-540-58027-1_11,David ScholefieldHussein ZedanHe Jifeng,1994,http://link.springer.com/chapter/10.1007/3-540-58027-1_11,Chapter
A New Channel Allocation Scheme for Vehicle Communication Networks,,"Wireless Algorithms, Systems, and Applications",,,,10.1007/978-3-319-07782-6_7,Jing XuWei LiZan MaShuo Zhang,2014,http://link.springer.com/chapter/10.1007/978-3-319-07782-6_7,Chapter
Static Detection of Livelocks in Ada Multitasking Programs,,Reliable Software Technologies – Ada Europe 2007,,,,10.1007/978-3-540-73230-3_6,Johann BliebergerBernd BurgstallerRobert Mittermayr,2007,http://link.springer.com/chapter/10.1007/978-3-540-73230-3_6,Chapter
Distributed Cooperation During the Absence of Communication,,Distributed Computing,,,,10.1007/3-540-40026-5_8,Grzegorz Greg MalewiczAlexander RussellAlex A. Shvartsman,2000,http://link.springer.com/chapter/10.1007/3-540-40026-5_8,Chapter
A Notion of Equivalence for Refactorings with Abstract Execution,,"Leveraging Applications of Formal Methods, Verification and Validation. Software Engineering",,,,10.1007/978-3-031-19756-7_15,Ole Jørgen AbusdalEduard KamburjanViolet Ka I. PunVolker Stolz,2022,http://link.springer.com/chapter/10.1007/978-3-031-19756-7_15,Chapter
An O(logn)-Approximation Algorithm for the Disjoint Paths Problem in Eulerian Planar Graphs and 4-Edge-Connected Planar Graphs,,"Approximation, Randomization, and Combinatorial Optimization. Algorithms and Techniques",,,,10.1007/978-3-642-15369-3_21,Ken-ichi KawarabayashiYusuke Kobayashi,2010,http://link.springer.com/chapter/10.1007/978-3-642-15369-3_21,Chapter
Processor Allocation for Optimistic Parallelization of Irregular Programs,,Computational Science and Its Applications – ICCSA 2012,,,,10.1007/978-3-642-31125-3_1,Francesco VersaciKeshav Pingali,2012,http://link.springer.com/chapter/10.1007/978-3-642-31125-3_1,Chapter
When Programs Have to Watch Paint Dry,,Foundations of Software Science and Computation Structures,,,,10.1007/978-3-031-30829-1_1,Danel Ahman,2023,http://link.springer.com/chapter/10.1007/978-3-031-30829-1_1,Chapter
Computing without Clocks: Micropipelining the ARM Processor,,Asynchronous Digital Circuit Design,,,,10.1007/978-1-4471-3575-3_5,Steve Furber,1995,http://link.springer.com/chapter/10.1007/978-1-4471-3575-3_5,Chapter
A Paradigm for Detecting Quiescent Properties in Distributed Computations,,Logics and Models of Concurrent Systems,,,,10.1007/978-3-642-82453-1_11,K. Mani ChandyJayadev Misra,1985,http://link.springer.com/chapter/10.1007/978-3-642-82453-1_11,Chapter
Program transformation and rewriting,,Rewriting Techniques and Applications,,,,10.1007/3-540-53904-2_99,Françoise Bellegarde,1991,http://link.springer.com/chapter/10.1007/3-540-53904-2_99,Chapter
Refinement semantics and loop rules,,FM’99 — Formal Methods,,,,10.1007/3-540-48118-4_29,Eric C. R. HehnerAndrew M. Gravel,1999,http://link.springer.com/chapter/10.1007/3-540-48118-4_29,Chapter
Improving ABT Performance by Adding Synchronization Points,,Recent Advances in Constraints,,,,10.1007/978-3-540-89812-2_4,Ismel BritoPedro Meseguer,2008,http://link.springer.com/chapter/10.1007/978-3-540-89812-2_4,Chapter
Optimal Point Set Projections onto Regular Grids,,Algorithms and Computation,,,,10.1007/978-3-540-24587-2_29,José Miguel Díaz-BáñezFerran HurtadoMario Alberto LópezJ. Antoni Sellarès,2003,http://link.springer.com/chapter/10.1007/978-3-540-24587-2_29,Chapter
Distributed modal theorem proving with KE,,Theorem Proving with Analytic Tableaux and Related Methods,,,,10.1007/3-540-61208-4_11,Jeremy PittJim Cunningham,1996,http://link.springer.com/chapter/10.1007/3-540-61208-4_11,Chapter
Extracting Safe Thread Schedules from Incomplete Model Checking Results,,Model Checking Software,,,,10.1007/978-3-030-30923-7_9,Patrick MetzlerNeeraj SuriGeorg Weissenbacher,2019,http://link.springer.com/chapter/10.1007/978-3-030-30923-7_9,Chapter
Object-oriented distributed programming in BETA,,Object-Based Distributed Programming,,,,10.1007/BFb0017541,Søren BrandtOle Lehrmann Madsen,1994,http://link.springer.com/chapter/10.1007/BFb0017541,Chapter
Some issues in the semantics of facile distributed programming,,Semantics: Foundations and Applications,,,,10.1007/3-540-56596-5_47,Bent ThomsenLone LethAlessandro Giacalone,1993,http://link.springer.com/chapter/10.1007/3-540-56596-5_47,Chapter
"Ontology Engineering, Scientific Method and the Research Agenda",,Managing Knowledge in a World of Networks,,,,10.1007/11891451_13,Hans AkkermansJaap Gordijn,2006,http://link.springer.com/chapter/10.1007/11891451_13,Chapter
Mathematical Programming as an Intellectual Activity,,Algorithms and Model Formulations in Mathematical Programming,,,,10.1007/978-3-642-83724-1_3,A. H. G. Rinnooy Kan,1989,http://link.springer.com/chapter/10.1007/978-3-642-83724-1_3,Chapter
Using Flow Specifications of Parameterized Cache Coherence Protocols for Verifying Deadlock Freedom,,Automated Technology for Verification and Analysis,,,,10.1007/978-3-319-11936-6_24,Divjyot SethiMuralidhar TalupurSharad Malik,2014,http://link.springer.com/chapter/10.1007/978-3-319-11936-6_24,Chapter
Functional programming and parallel processing,,Vector and Parallel Processing — VECPAR'96,,,,10.1007/3-540-62828-2_134,Rafael Dueire Lins,1997,http://link.springer.com/chapter/10.1007/3-540-62828-2_134,Chapter
A Distributed Algorithm for Waking-up in Heterogeneous Sensor Networks,,Information Processing in Sensor Networks,,,,10.1007/3-540-36978-3_41,Akis SpyropoulosCauligi S. RaghavendraViktor K. Prasanna,2003,http://link.springer.com/chapter/10.1007/3-540-36978-3_41,Chapter
The birth of PEIRCE: A conceptual graphs workbench,,Conceptual Structures: Theory and Implementation,,,,10.1007/3-540-57454-9_17,Gerard EllisRobert Levinson,1993,http://link.springer.com/chapter/10.1007/3-540-57454-9_17,Chapter
QoS-T: QoS Throttling to Elicit User Cooperation in Computer Systems,,Computer Network Security,,,,10.1007/978-3-642-14706-7_8,Vidyaraman SankaranarayananShambhu UpadhyayaKevin Kwiat,2010,http://link.springer.com/chapter/10.1007/978-3-642-14706-7_8,Chapter
On the Limits of Recursively Self-Improving AGI,,Artificial General Intelligence,,,,10.1007/978-3-319-21365-1_40,Roman V. Yampolskiy,2015,http://link.springer.com/chapter/10.1007/978-3-319-21365-1_40,Chapter
Data-Utility Sensitive Query Processing on Server Clusters to Support Scalable Data Analysis Services,,New Frontiers in Information and Software as Services,,,,10.1007/978-3-642-19294-4_7,Renwei YuMithila NagendraParth NagarkarK. Selçuk CandanJong Wook Kim,2011,http://link.springer.com/chapter/10.1007/978-3-642-19294-4_7,Chapter
A characterization of a dot-depth two analogue of generalized definite languages,,"Automata, Languages and Programming",,,,10.1007/3-540-09510-1_18,Faith E. FichJ. A. Brzozowski,1979,http://link.springer.com/chapter/10.1007/3-540-09510-1_18,Chapter
Dynamic Livelock Analysis of Multi-threaded Programs,,Runtime Verification,,,,10.1007/978-3-642-35632-2_3,Malay K. Ganai,2013,http://link.springer.com/chapter/10.1007/978-3-642-35632-2_3,Chapter
A survey of parallel attribute evaluation methods,,"Attribute Grammars, Applications and Systems",,,,10.1007/3-540-54572-7_9,Martin Jourdan,1991,http://link.springer.com/chapter/10.1007/3-540-54572-7_9,Chapter
A compiler for natural semantics,,Compiler Construction,,,,10.1007/3-540-61053-7_61,Mikael Pettersson,1996,http://link.springer.com/chapter/10.1007/3-540-61053-7_61,Chapter
UCX Programming Interface for Remote Function Injection and Invocation,,OpenSHMEM and Related Technologies. OpenSHMEM in the Era of Exascale and Smart Networks,,,,10.1007/978-3-031-04888-3_9,Luis E. PeñaWenbin LuPavel ShamisSteve Poole,2022,http://link.springer.com/chapter/10.1007/978-3-031-04888-3_9,Chapter
An Inference Algorithm for Probabilistic Fault Management in Distributed Systems,,"Network Control and Engineering for QoS, Security and Mobility, III",,,,10.1007/0-387-23198-6_15,Jianguo DingBernd KrämerYingcai BaiHansheng Chen,2005,http://link.springer.com/chapter/10.1007/0-387-23198-6_15,Chapter
Hypermedia Discourse: Contesting Networks of Ideas and Arguments,,Conceptual Structures: Knowledge Architectures for Smart Applications,,,,10.1007/978-3-540-73681-3_3,Simon Buckingham Shum,2007,http://link.springer.com/chapter/10.1007/978-3-540-73681-3_3,Chapter
Conscience-Based Routing in P2P Networks: Preventing Copyright Violations and Social Malaise,,Recent Trends in Network Security and Applications,,,,10.1007/978-3-642-14478-3_31,Ankur Gupta,2010,http://link.springer.com/chapter/10.1007/978-3-642-14478-3_31,Chapter
High Performance Algorithms for Counting Collisions and Pairwise Interactions,,Computational Science – ICCS 2019,,,,10.1007/978-3-030-22734-0_14,Matheus Henrique Junqueira SaldanhaPaulo Sérgio Lopes de Souza,2019,http://link.springer.com/chapter/10.1007/978-3-030-22734-0_14,Chapter
Formally Efficient Program Instrumentation,,Runtime Verification,,,,10.1007/978-3-642-16612-9_19,Boris FeiginAlan Mycroft,2010,http://link.springer.com/chapter/10.1007/978-3-642-16612-9_19,Chapter
Generic Deterministic Random Number Generation in Dynamic-Multithreaded Platforms,,Euro-Par 2014 Parallel Processing,,,,10.1007/978-3-319-09873-9_36,Stefano MorJean-Louis RochNicolas Maillard,2014,http://link.springer.com/chapter/10.1007/978-3-319-09873-9_36,Chapter
Probabilistic Inference for Network Management,,Universal Multiservice Networks,,,,10.1007/978-3-540-30197-4_49,Jianguo DingBernd J. KrämerYingcai BaiHansheng Chen,2004,http://link.springer.com/chapter/10.1007/978-3-540-30197-4_49,Chapter
Near Optimal Work-Stealing Tree Scheduler for Highly Irregular Data-Parallel Workloads,,Languages and Compilers for Parallel Computing,,,,10.1007/978-3-319-09967-5_4,Aleksandar ProkopecMartin Odersky,2014,http://link.springer.com/chapter/10.1007/978-3-319-09967-5_4,Chapter
The Poly1305-AES Message-Authentication Code,,Fast Software Encryption,,,,10.1007/11502760_3,Daniel J. Bernstein,2005,http://link.springer.com/chapter/10.1007/11502760_3,Chapter
Chapter 11. Atomic transactions,,Distributed Systems — Architecture and Implementation,,,,10.1007/3-540-10571-9_11,Butler W. Lampson,1981,http://link.springer.com/chapter/10.1007/3-540-10571-9_11,Chapter
Similarity Based Granules,,Rough Sets,,,,10.1007/978-3-030-52705-1_3,Dávid NagyTamás MihálydeákTamás Kádek,2020,http://link.springer.com/chapter/10.1007/978-3-030-52705-1_3,Chapter
Programs as collections of communicating Prolog units,,ESOP 86,,,,10.1007/3-540-16442-1_21,Paola MelloAntonio Natali,1986,http://link.springer.com/chapter/10.1007/3-540-16442-1_21,Chapter
Practical Free-Start Collision Attacks on 76-step SHA-1,,Advances in Cryptology -- CRYPTO 2015,,,,10.1007/978-3-662-47989-6_30,Pierre KarpmanThomas PeyrinMarc Stevens,2015,http://link.springer.com/chapter/10.1007/978-3-662-47989-6_30,Chapter
"Slead: Low-Memory, Steady Distributed Systems Slicing",,Distributed Applications and Interoperable Systems,,,,10.1007/978-3-642-30823-9_1,Francisco MaiaMiguel MatosEtienne RivièreRui Oliveira,2012,http://link.springer.com/chapter/10.1007/978-3-642-30823-9_1,Chapter
"Power, Puzzles and Properties of Entanglement",,"Machines, Computations, and Universality",,,,10.1007/3-540-45132-3_3,Jozef GruskaHiroshi Imai,2001,http://link.springer.com/chapter/10.1007/3-540-45132-3_3,Chapter
From Distributed Systems to Ubiquitous Computing,,Kommunikation in Verteilten Systemen (KiVS),,,,10.1007/978-3-642-55569-5_1,Friedemann MatternPeter Sturm,2003,http://link.springer.com/chapter/10.1007/978-3-642-55569-5_1,Chapter
ReDABLS: Revisiting Device Attestation with Bounded Leakage of Secrets (Transcript of Discussion),,Security Protocols XXI,,,,10.1007/978-3-642-41717-7_13,Virgil Gligor,2013,http://link.springer.com/chapter/10.1007/978-3-642-41717-7_13,Chapter
"What Computers Do: Model, Connect, Engage",,Theory and Applications of Models of Computation,,,,10.1007/978-3-642-29952-0_5,Butler Lampson,2012,http://link.springer.com/chapter/10.1007/978-3-642-29952-0_5,Chapter
Entanglement in General Multipartite Quantum Systems and Its Role in Quantum Information Processing Tasks,,Computer Networks,,,,10.1007/978-3-642-13861-4_2,Roman Gielerak,2010,http://link.springer.com/chapter/10.1007/978-3-642-13861-4_2,Chapter
Uniprocessor garbage collection techniques,,Memory Management,,,,10.1007/BFb0017182,Paul R. Wilson,1992,http://link.springer.com/chapter/10.1007/BFb0017182,Chapter
Optimal Stem Identification in Presence of Suffix List,,Computational Linguistics and Intelligent Text Processing,,,,10.1007/978-3-642-28604-9_8,N. VasudevanPushpak Bhattacharyya,2012,http://link.springer.com/chapter/10.1007/978-3-642-28604-9_8,Chapter
Domain Dependent Parameter Setting in SAT Solver Using Machine Learning Techniques,,Agents and Artificial Intelligence,,,,10.1007/978-3-031-22953-4_8,Filip BeskydPavel Surynek,2022,http://link.springer.com/chapter/10.1007/978-3-031-22953-4_8,Chapter
An algebraic approach to performance analysis,,Parallel Computing in Science and Engineering,,,,10.1007/3-540-18923-8_20,Dieter Müller-Wichards,1988,http://link.springer.com/chapter/10.1007/3-540-18923-8_20,Chapter
Scotch: Combining Software Guard Extensions and System Management Mode to Monitor Cloud Resource Usage,,"Research in Attacks, Intrusions, and Defenses",,,,10.1007/978-3-319-66332-6_18,Kevin LeachFengwei ZhangWestley Weimer,2017,http://link.springer.com/chapter/10.1007/978-3-319-66332-6_18,Chapter
Declarative Computing: A Technology Driver,,Architektur von Rechensystemen,,,,10.1007/978-3-642-77422-5_1,Peter M. Kogge,1992,http://link.springer.com/chapter/10.1007/978-3-642-77422-5_1,Chapter
The MOLEN ρμ-Coded Processor,,Field-Programmable Logic and Applications,,,,10.1007/3-540-44687-7_29,Stamatis VassiliadisStephan WongSorin Cotöfană,2001,http://link.springer.com/chapter/10.1007/3-540-44687-7_29,Chapter
Programming with Fudgets,,Advanced Functional Programming,,,,10.1007/3-540-59451-5_5,Thomas HallgrenMagnus Carlsson,1995,http://link.springer.com/chapter/10.1007/3-540-59451-5_5,Chapter
Experience Developing and Deploying Concurrency Analysis at Facebook,,Static Analysis,,,,10.1007/978-3-319-99725-4_5,Peter O’Hearn,2018,http://link.springer.com/chapter/10.1007/978-3-319-99725-4_5,Chapter
Proactive Fortification of Fault-Tolerant Services,,Principles of Distributed Systems,,,,10.1007/978-3-642-10877-8_26,Paul EzhilchelvanDylan ClarkeIsi MitraniSantosh Shrivastava,2009,http://link.springer.com/chapter/10.1007/978-3-642-10877-8_26,Chapter
Validating Model-Driven Performance Predictions on Random Software Systems,,Research into Practice – Reality and Gaps,,,,10.1007/978-3-642-13821-8_3,Vlastimil BabkaPetr TůmaLubomír Bulej,2010,http://link.springer.com/chapter/10.1007/978-3-642-13821-8_3,Chapter
Neurorobotics Primer,,The Path to Autonomous Robots,,,,10.1007/978-0-387-85774-9_7,M. Anthony LewisTheresa J. Klein,2009,http://link.springer.com/chapter/10.1007/978-0-387-85774-9_7,Chapter
Architecture of a communication network processor,,PARLE '89 Parallel Architectures and Languages Europe,,,,10.1007/3540512845_43,W. G. P. MooijA. Ligtenberg,1989,http://link.springer.com/chapter/10.1007/3540512845_43,Chapter
The Architecture of ALIEN,,Active Networks,,,,10.1007/978-3-540-48507-0_1,D. Scott AlexanderJonathan M. Smith,1999,http://link.springer.com/chapter/10.1007/978-3-540-48507-0_1,Chapter
DynODet: Detecting Dynamic Obfuscation in Malware,,"Detection of Intrusions and Malware, and Vulnerability Assessment",,,,10.1007/978-3-319-60876-1_5,Danny KimAmir Majlesi-KupaeiJulien RoyKapil AnandKhaled ElWazeerDaniel BuettnerRajeev Barua,2017,http://link.springer.com/chapter/10.1007/978-3-319-60876-1_5,Chapter
What Next After Anonymity? (Transcript of Discussion),,Security Protocols XVI,,,,10.1007/978-3-642-22137-8_30,Ross Anderson,2011,http://link.springer.com/chapter/10.1007/978-3-642-22137-8_30,Chapter
Data parallel implementation of extensible sparse functional arrays,,PARLE '93 Parallel Architectures and Languages Europe,,,,10.1007/3-540-56891-3_6,John T. O'Donnell,1993,http://link.springer.com/chapter/10.1007/3-540-56891-3_6,Chapter
Incorporating Recovery from Failures into a Data Integration Benchmark,,Selected Topics in Performance Evaluation and Benchmarking,,,,10.1007/978-3-642-36727-4_2,Len WyattBrian CaufieldMarco VieiraMeikel Poess,2013,http://link.springer.com/chapter/10.1007/978-3-642-36727-4_2,Chapter
Performance of Serializable Snapshot Isolation on Multicore Servers,,Database Systems for Advanced Applications,,,,10.1007/978-3-642-37450-0_31,Hyungsoo JungHyuck HanAlan FeketeUwe RöhmHeon Y. Yeom,2013,http://link.springer.com/chapter/10.1007/978-3-642-37450-0_31,Chapter
Linguistic Theory and Natural Language Processing,,Natural Language and Speech,,,,10.1007/978-3-642-77189-7_5,Ivan A. Sag,1991,http://link.springer.com/chapter/10.1007/978-3-642-77189-7_5,Chapter
Unclouded Vision,,Distributed Computing and Networking,,,,10.1007/978-3-642-17679-1_3,Jon CrowcroftAnil MadhavapeddyMalte SchwarzkopfTheodore HongRichard Mortier,2011,http://link.springer.com/chapter/10.1007/978-3-642-17679-1_3,Chapter
An Ontological Approach to Connecting SOA Implementations,,E-Technologies: Innovation in an Open World,,,,10.1007/978-3-642-01187-0_4,Wesley McGregor,2009,http://link.springer.com/chapter/10.1007/978-3-642-01187-0_4,Chapter
Actor-Based Parallel Dataflow Analysis,,Compiler Construction,,,,10.1007/978-3-642-19861-8_11,Jonathan RodriguezOndřej Lhoták,2011,http://link.springer.com/chapter/10.1007/978-3-642-19861-8_11,Chapter
A Flexible Personalization Architecture for Wireless Internet Based on Mobile Agents,,Advances in Databases and Information Systems,,,,10.1007/3-540-45710-0_11,George SamarasChristoforos Panayiotou,2002,http://link.springer.com/chapter/10.1007/3-540-45710-0_11,Chapter
An On-Line Performance Introspection Framework for Task-Based Runtime Systems,,Computational Science – ICCS 2019,,,,10.1007/978-3-030-22734-0_18,Xavier AguilarHerbert JordanThomas HellerAlexander HirschThomas FahringerErwin Laure,2019,http://link.springer.com/chapter/10.1007/978-3-030-22734-0_18,Chapter
"History, Nostalgia and Software",,Making the History of Computing Relevant,,,,10.1007/978-3-642-41650-7_24,David Holdsworth,2013,http://link.springer.com/chapter/10.1007/978-3-642-41650-7_24,Chapter
Adaptive Soft-Decision Iterative Decoding Using Edge Local Complementation,,Coding Theory and Applications,,,,10.1007/978-3-540-87448-5_10,Joakim Grahl KnudsenConstanza RieraMatthew G. ParkerEirik Rosnes,2008,http://link.springer.com/chapter/10.1007/978-3-540-87448-5_10,Chapter
An Efficient Graph Cut Algorithm for Computer Vision Problems,,Computer Vision – ECCV 2010,,,,10.1007/978-3-642-15558-1_40,Chetan AroraSubhashis BanerjeePrem KalraS. N. Maheshwari,2010,http://link.springer.com/chapter/10.1007/978-3-642-15558-1_40,Chapter
Hybrid control of a robot — a case study,,Hybrid Systems II,,,,10.1007/3-540-60472-3_20,Anders P. RavnHans RischelMichael HoldgaardThomas J. EriksenFinn ConradTorben O. Andersen,1995,http://link.springer.com/chapter/10.1007/3-540-60472-3_20,Chapter
Toward Efficient Architecture-Independent Algorithms for Dynamic Programs,,High Performance Computing,,,,10.1007/978-3-030-20656-7_8,Mohammad Mahdi JavanmardPramod GanapathiRathish DasZafar AhmadStephen TschudiRezaul Chowdhury,2019,http://link.springer.com/chapter/10.1007/978-3-030-20656-7_8,Chapter
Autonomous heterogeneous computing — Some open problems,,Operating Systems of the 90s and Beyond,,,,10.1007/BFb0024526,Hermann Schmutz,1991,http://link.springer.com/chapter/10.1007/BFb0024526,Chapter
Spill Code Placement for SIMD Machines,,Programming Languages,,,,10.1007/978-3-642-33182-4_3,Diogo Nunes SampaioElie GedeonFernando Magno Quintão PereiraCaroline Collange,2012,http://link.springer.com/chapter/10.1007/978-3-642-33182-4_3,Chapter
Energy Management for Embedded Multithreaded Processors with Integrated EDF Scheduling,,Systems Aspects in Organic and Pervasive Computing - ARCS 2005,,,,10.1007/978-3-540-31967-2_1,Sascha UhrigTheo Ungerer,2005,http://link.springer.com/chapter/10.1007/978-3-540-31967-2_1,Chapter
Compiler-controlled multithreading for lenient parallel languages,,Functional Programming Languages and Computer Architecture,,,,10.1007/3540543961_4,Klaus Erik SchauserDavid E. CullerThorsten von Eicken,1991,http://link.springer.com/chapter/10.1007/3540543961_4,Chapter
Specification Mining with Few False Positives,,Tools and Algorithms for the Construction and Analysis of Systems,,,,10.1007/978-3-642-00768-2_26,Claire Le GouesWestley Weimer,2009,http://link.springer.com/chapter/10.1007/978-3-642-00768-2_26,Chapter
Communication heuristics in distributed combinatorial search algorithms,,Distributed Algorithms,,,,10.1007/3-540-51687-5_49,Alfred Taudes,1989,http://link.springer.com/chapter/10.1007/3-540-51687-5_49,Chapter
Progress in hardware-assisted real-time garbage collection,,Memory Management,,,,10.1007/3-540-60368-9_34,Kelvin Nilsen,1995,http://link.springer.com/chapter/10.1007/3-540-60368-9_34,Chapter
Optimization of Visitor Performance by Reflection-Based Analysis,,Theory and Practice of Model Transformations,,,,10.1007/978-3-642-21732-6_2,Markus LepperBaltasar Trancón y Widemann,2011,http://link.springer.com/chapter/10.1007/978-3-642-21732-6_2,Chapter
Model-Based Dependability Evaluation Method for TTP/C Based Systems,,Dependable Computing EDCC-4,,,,10.1007/3-540-36080-8_23,Pavel HeroutStanislav RacekJan Hlavička,2002,http://link.springer.com/chapter/10.1007/3-540-36080-8_23,Chapter
Probabilistic Inference Strategy in Distributed Intrusion Detection Systems,,Parallel and Distributed Processing and Applications,,,,10.1007/978-3-540-30566-8_97,Jianguo DingShihao XuBernd KrämerYingcai BaiHansheng ChenJun Zhang,2005,http://link.springer.com/chapter/10.1007/978-3-540-30566-8_97,Chapter
BDDNOW: A Parallel BDD Package,,Formal Methods in Computer-Aided Design,,,,10.1007/3-540-49519-3_32,Kim Milvang-JensenAlan J. Hu,1998,http://link.springer.com/chapter/10.1007/3-540-49519-3_32,Chapter
State Generation in the PARMC Model Checker,,Practical Aspects of Declarative Languages,,,,10.1007/3-540-45241-9_23,Owen Kaser,2001,http://link.springer.com/chapter/10.1007/3-540-45241-9_23,Chapter
A Game-Theoretic Analysis of Games with a Purpose,,Internet and Network Economics,,,,10.1007/978-3-540-92185-1_40,Shaili JainDavid C. Parkes,2008,http://link.springer.com/chapter/10.1007/978-3-540-92185-1_40,Chapter
LWOAD: A Specification Language to Enable the End-User Develoment of Coordinative Functionalities,,End-User Development,,,,10.1007/978-3-642-00427-8_9,Federico CabitzaCarla Simone,2009,http://link.springer.com/chapter/10.1007/978-3-642-00427-8_9,Chapter
RDVIS: A Tool that Visualizes the Causes of Low Locality and Hints Program Optimizations,,Computational Science – ICCS 2005,,,,10.1007/11428848_21,Kristof BeylsErik H. D’HollanderFrederik Vandeputte,2005,http://link.springer.com/chapter/10.1007/11428848_21,Chapter
Non-gaussianity and non-linearity in electroencephalographic time series,,Stochastic Control Theory and Stochastic Differential Systems,,,,10.1007/BFb0009397,Th. GasserG. Dumermuth,1979,http://link.springer.com/chapter/10.1007/BFb0009397,Chapter
Testing Your (Static Analysis) Truths,,Logic-Based Program Synthesis and Transformation,,,,10.1007/978-3-030-68446-4_14,Ignacio CassoJosé F. MoralesP. López-GarcíaManuel V. Hermenegildo,2021,http://link.springer.com/chapter/10.1007/978-3-030-68446-4_14,Chapter
Hint Generation Under Uncertainty: The Effect of Hint Quality on Help-Seeking Behavior,,Artificial Intelligence in Education,,,,10.1007/978-3-319-61425-0_26,Thomas W. PriceRui ZhiTiffany Barnes,2017,http://link.springer.com/chapter/10.1007/978-3-319-61425-0_26,Chapter
Supporting Learners in Adaptive Learning Environments through the Enhancement of the Student Model,,Human-Computer Interaction. Interacting in Various Application Domains,,,,10.1007/978-3-642-02583-9_19,Luca MazzolaRiccardo Mazza,2009,http://link.springer.com/chapter/10.1007/978-3-642-02583-9_19,Chapter
